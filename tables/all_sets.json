{
  "ascon128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "Ascon128",
      "keySize": 128,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "ascon-aead": {
        "language": "rust",
        "libVersion": "\"0.4.2\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 121,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ascon128a.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "Ascon128a",
      "keySize": 128,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "ascon-aead": {
        "language": "rust",
        "libVersion": "\"0.4.2\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 121,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ascon80pq.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "Ascon80pq",
      "keySize": 160,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "ascon-aead": {
        "language": "rust",
        "libVersion": "\"0.4.2\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 121,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_siv_cmac_256_96.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AeadAesCmacSiv",
      "keySize": 256,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 5297"],
    "testStatus": {
      "miscreant": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 169,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 52,
        "skipped": 117,
        "failed": 0
      }
    }
  },
  "aes_siv_cmac_256_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AeadAesCmacSiv",
      "keySize": 256,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 5297"],
    "testStatus": {
      "aes_siv": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 169,
        "skipped": 0,
        "failed": 0
      },
      "miscreant": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 169,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 52,
        "skipped": 117,
        "failed": 0
      }
    }
  },
  "aes_siv_cmac_384_96.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AeadAesCmacSiv",
      "keySize": 384,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 5297"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 52,
        "skipped": 117,
        "failed": 0
      }
    }
  },
  "aes_siv_cmac_384_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AeadAesCmacSiv",
      "keySize": 384,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 5297"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 52,
        "skipped": 117,
        "failed": 0
      }
    }
  },
  "aes_siv_cmac_512_96.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AeadAesCmacSiv",
      "keySize": 512,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 5297"],
    "testStatus": {
      "miscreant": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 169,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 52,
        "skipped": 117,
        "failed": 0
      }
    }
  },
  "aes_siv_cmac_512_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AeadAesCmacSiv",
      "keySize": 512,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 5297"],
    "testStatus": {
      "aes_siv": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 169,
        "skipped": 0,
        "failed": 0
      },
      "miscreant": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 169,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 52,
        "skipped": 117,
        "failed": 0
      }
    }
  },
  "aes_siv_pmac_256_96.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AeadAesPmacSiv",
      "keySize": 256,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "miscreant": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 169,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_siv_pmac_256_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AeadAesPmacSiv",
      "keySize": 256,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "aes_siv": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 169,
        "skipped": 0,
        "failed": 0
      },
      "miscreant": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 169,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_siv_pmac_384_96.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AeadAesPmacSiv",
      "keySize": 384,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {}
  },
  "aes_siv_pmac_384_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AeadAesPmacSiv",
      "keySize": 384,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {}
  },
  "aes_siv_pmac_512_96.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AeadAesPmacSiv",
      "keySize": 512,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "miscreant": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 169,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_siv_pmac_512_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AeadAesPmacSiv",
      "keySize": 512,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "aes_siv": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 169,
        "skipped": 0,
        "failed": 0
      },
      "miscreant": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 169,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aegis128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "Aegis128",
      "keySize": 128,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {}
  },
  "aegis128_l.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "Aegis128L",
      "keySize": 128,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {}
  },
  "aegis256.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "Aegis256",
      "keySize": 256,
      "ivSize": 256,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {}
  },
  "aes_gcm_sst_128_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcmSst",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["Galois Counter Mode with Secure Short Tags (GCM-SST)"],
    "testStatus": {}
  },
  "aes_gcm_sst_128_96_80.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcmSst",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 80
    },
    "folder": "aead",
    "references": ["Galois Counter Mode with Secure Short Tags (GCM-SST)"],
    "testStatus": {}
  },
  "aes_gcm_sst_128_96_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcmSst",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 64
    },
    "folder": "aead",
    "references": ["Galois Counter Mode with Secure Short Tags (GCM-SST)"],
    "testStatus": {}
  },
  "aes_gcm_sst_128_96_32.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcmSst",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 32
    },
    "folder": "aead",
    "references": ["Galois Counter Mode with Secure Short Tags (GCM-SST)"],
    "testStatus": {}
  },
  "aes_gcm_sst_256_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcmSst",
      "keySize": 256,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["Galois Counter Mode with Secure Short Tags (GCM-SST)"],
    "testStatus": {}
  },
  "aes_gcm_sst_256_96_80.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcmSst",
      "keySize": 256,
      "ivSize": 96,
      "tagSize": 80
    },
    "folder": "aead",
    "references": ["Galois Counter Mode with Secure Short Tags (GCM-SST)"],
    "testStatus": {}
  },
  "aes_gcm_sst_256_96_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcmSst",
      "keySize": 256,
      "ivSize": 96,
      "tagSize": 64
    },
    "folder": "aead",
    "references": ["Galois Counter Mode with Secure Short Tags (GCM-SST)"],
    "testStatus": {}
  },
  "aes_gcm_sst_256_96_32.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcmSst",
      "keySize": 256,
      "ivSize": 96,
      "tagSize": 32
    },
    "folder": "aead",
    "references": ["Galois Counter Mode with Secure Short Tags (GCM-SST)"],
    "testStatus": {}
  },
  "aes128_cbc_hmac_sha256.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "Aes128CbcHmacSha256",
      "keySize": 256,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 7518"],
    "testStatus": {}
  },
  "aes192_cbc_hmac_sha384.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "Aes192CbcHmacSha384",
      "keySize": 384,
      "ivSize": 128,
      "tagSize": 192
    },
    "folder": "aead",
    "references": ["RFC 7518"],
    "testStatus": {}
  },
  "aes256_cbc_hmac_sha384.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "Aes256CbcHmacSha384",
      "keySize": 448,
      "ivSize": 128,
      "tagSize": 192
    },
    "folder": "aead",
    "references": ["draft-mcgrew-aead-aes-cbc-hmac-sha2-05"],
    "testStatus": {}
  },
  "aes256_cbc_hmac_sha512.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "Aes256CbcHmacSha512",
      "keySize": 512,
      "ivSize": 128,
      "tagSize": 256
    },
    "folder": "aead",
    "references": ["RFC 7518"],
    "testStatus": {}
  },
  "chacha20_poly1305.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "Chacha20Poly1305",
      "keySize": 256,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 8439"],
    "testStatus": {
      "chacha20poly1305": {
        "language": "rust",
        "libVersion": "\"0.10.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 340,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 340,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 680,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "xchacha20_poly1305.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "XChacha20Poly1305",
      "keySize": 256,
      "ivSize": 192,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["draft-irtf-cfrg-xchacha-03"],
    "testStatus": {
      "chacha20poly1305": {
        "language": "rust",
        "libVersion": "\"0.10.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 317,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "daead_aes_siv_cmac_256.json": {
    "type": "Daead",
    "alg": {
      "algorithmType": "Daead",
      "primitive": "DaeadAesCmacSiv",
      "keySize": 256,
      "tagSize": 128
    },
    "folder": "daead",
    "references": ["RFC 5297"],
    "testStatus": {
      "miscreant": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 87,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "daead_aes_siv_pmac_256.json": {
    "type": "Daead",
    "alg": {
      "algorithmType": "Daead",
      "primitive": "DaeadAesPmacSiv",
      "keySize": 256,
      "tagSize": 128
    },
    "folder": "daead",
    "references": [],
    "testStatus": {
      "miscreant": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 87,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "daead_aes_siv_cmac_384.json": {
    "type": "Daead",
    "alg": {
      "algorithmType": "Daead",
      "primitive": "DaeadAesCmacSiv",
      "keySize": 384,
      "tagSize": 128
    },
    "folder": "daead",
    "references": ["RFC 5297"],
    "testStatus": {}
  },
  "daead_aes_siv_pmac_384.json": {
    "type": "Daead",
    "alg": {
      "algorithmType": "Daead",
      "primitive": "DaeadAesPmacSiv",
      "keySize": 384,
      "tagSize": 128
    },
    "folder": "daead",
    "references": [],
    "testStatus": {}
  },
  "daead_aes_siv_cmac_512.json": {
    "type": "Daead",
    "alg": {
      "algorithmType": "Daead",
      "primitive": "DaeadAesCmacSiv",
      "keySize": 512,
      "tagSize": 128
    },
    "folder": "daead",
    "references": ["RFC 5297"],
    "testStatus": {
      "miscreant": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 87,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "daead_aes_siv_pmac_512.json": {
    "type": "Daead",
    "alg": {
      "algorithmType": "Daead",
      "primitive": "DaeadAesPmacSiv",
      "keySize": 512,
      "tagSize": 128
    },
    "folder": "daead",
    "references": [],
    "testStatus": {
      "miscreant": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 87,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_128_64_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 128,
      "ivSize": 64,
      "tagSize": 64
    },
    "folder": "aead",
    "references": ["RFC 4106"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 130,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_128_64_96.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 128,
      "ivSize": 64,
      "tagSize": 96
    },
    "folder": "aead",
    "references": ["RFC 4106"],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 138,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_128_64_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 128,
      "ivSize": 64,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 4106"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 142,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 284,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_192_64_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 192,
      "ivSize": 64,
      "tagSize": 64
    },
    "folder": "aead",
    "references": ["RFC 4106"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 116,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_192_64_96.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 192,
      "ivSize": 64,
      "tagSize": 96
    },
    "folder": "aead",
    "references": ["RFC 4106"],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_192_64_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 192,
      "ivSize": 64,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 4106"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 128,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 256,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_256_64_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 256,
      "ivSize": 64,
      "tagSize": 64
    },
    "folder": "aead",
    "references": ["RFC 4106"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 116,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_256_64_96.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 256,
      "ivSize": 64,
      "tagSize": 96
    },
    "folder": "aead",
    "references": ["RFC 4106"],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_256_64_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 256,
      "ivSize": 64,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 4106"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 128,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 256,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_128_96_96.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 96
    },
    "folder": "aead",
    "references": ["RFC 5084"],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 138,
        "skipped": 0,
        "failed": 0
      },
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 138,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 138,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_128_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [
      "RFC 5084",
      "RFC 5116",
      "RFC 5288",
      "RFC 5647"
    ],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 142,
        "skipped": 0,
        "failed": 0
      },
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 142,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 142,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 284,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_192_96_96.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 192,
      "ivSize": 96,
      "tagSize": 96
    },
    "folder": "aead",
    "references": ["RFC 5084"],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      },
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_192_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 192,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 5084"],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 128,
        "skipped": 0,
        "failed": 0
      },
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 128,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 128,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 256,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_256_96_96.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 256,
      "ivSize": 96,
      "tagSize": 96
    },
    "folder": "aead",
    "references": ["RFC 5084"],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      },
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_256_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 256,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [
      "RFC 5084",
      "RFC 5116",
      "RFC 5288",
      "RFC 5647"
    ],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 128,
        "skipped": 0,
        "failed": 0
      },
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 128,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 128,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 256,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_128_128_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 128,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 149,
        "skipped": 0,
        "failed": 0
      },
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 149,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 149,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 298,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_128_256_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 128,
      "ivSize": 256,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 156,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 156,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 312,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_192_128_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 192,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 135,
        "skipped": 0,
        "failed": 0
      },
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 135,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 135,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 270,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_192_256_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 192,
      "ivSize": 256,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 142,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 142,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 284,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_256_128_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 256,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 135,
        "skipped": 0,
        "failed": 0
      },
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 135,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 135,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 270,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_256_256_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcm",
      "keySize": 256,
      "ivSize": 256,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 142,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 142,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 284,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_gcm_128_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AriaGcm",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 6209"],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 128,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 128,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_gcm_192_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AriaGcm",
      "keySize": 192,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 6209"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 128,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_gcm_256_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AriaGcm",
      "keySize": 256,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 128,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 128,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_gcm_128_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "CamelliaGcm",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [
      "RFC 6367",
      "RFC 9580",
      "libassh"
    ],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 128,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_gcm_192_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "CamelliaGcm",
      "keySize": 192,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [
      "RFC 6367",
      "RFC 9580",
      "libassh"
    ],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 128,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_gcm_256_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "CamelliaGcm",
      "keySize": 256,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [
      "RFC 6367",
      "RFC 9580",
      "libassh"
    ],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 128,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "seed_gcm_128_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "SeedGcm",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 128,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "seed_gcm_128_96_80.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "SeedGcm",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 80
    },
    "folder": "aead",
    "references": ["RFC 5669"],
    "testStatus": {}
  },
  "sm4_gcm_128_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "Sm4Gcm",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 8998"],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 128,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "serpent_gcm_128_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "SerpentGcm",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["libassh"],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 128,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "serpent_gcm_256_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "SerpentGcm",
      "keySize": 256,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["libassh"],
    "testStatus": {}
  },
  "twofish_gcm_128_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "TwofishGcm",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["libassh"],
    "testStatus": {}
  },
  "twofish_gcm_256_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "TwofishGcm",
      "keySize": 256,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [
      "libassh",
      "RFC 9580"
    ],
    "testStatus": {
      "aes_gcm": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 128,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_siv128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcmSiv",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 8452"],
    "testStatus": {
      "aes_gcm_siv": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 161,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_siv256.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcmSiv",
      "keySize": 256,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 8452"],
    "testStatus": {
      "aes_gcm_siv": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 163,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_gcm_siv192.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesGcmSiv",
      "keySize": 192,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["EVP_CIPHER-AES"],
    "testStatus": {}
  },
  "aes_ccm_128_88_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesCcm",
      "keySize": 128,
      "ivSize": 88,
      "tagSize": 64
    },
    "folder": "aead",
    "references": ["RFC 5282"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ccm_192_88_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesCcm",
      "keySize": 192,
      "ivSize": 88,
      "tagSize": 64
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      },
      "eax": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-09-07 14:56",
        "testVersion": "0.48",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ccm_256_88_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesCcm",
      "keySize": 256,
      "ivSize": 88,
      "tagSize": 64
    },
    "folder": "aead",
    "references": ["RFC 5282"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ccm_128_88_96.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesCcm",
      "keySize": 128,
      "ivSize": 88,
      "tagSize": 96
    },
    "folder": "aead",
    "references": ["RFC 5282"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ccm_192_88_96.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesCcm",
      "keySize": 192,
      "ivSize": 88,
      "tagSize": 96
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      },
      "eax": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-09-07 14:56",
        "testVersion": "0.48",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ccm_256_88_96.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesCcm",
      "keySize": 256,
      "ivSize": 88,
      "tagSize": 96
    },
    "folder": "aead",
    "references": ["RFC 5282"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ccm_128_88_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesCcm",
      "keySize": 128,
      "ivSize": 88,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 5282"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 252,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ccm_192_88_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesCcm",
      "keySize": 192,
      "ivSize": 88,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 252,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ccm_256_88_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesCcm",
      "keySize": 256,
      "ivSize": 88,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 5282"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 252,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ccm_128_96_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesCcm",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 64
    },
    "folder": "aead",
    "references": ["RFC 6655"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ccm_192_96_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesCcm",
      "keySize": 192,
      "ivSize": 96,
      "tagSize": 64
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ccm_256_96_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesCcm",
      "keySize": 256,
      "ivSize": 96,
      "tagSize": 64
    },
    "folder": "aead",
    "references": ["RFC 6655"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ccm_128_104_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesCcm",
      "keySize": 128,
      "ivSize": 104,
      "tagSize": 64
    },
    "folder": "aead",
    "references": ["CCMP"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ccm_192_104_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesCcm",
      "keySize": 192,
      "ivSize": 104,
      "tagSize": 64
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ccm_256_104_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesCcm",
      "keySize": 256,
      "ivSize": 104,
      "tagSize": 64
    },
    "folder": "aead",
    "references": [],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_ccm_128_104_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "CamelliaCcm",
      "keySize": 128,
      "ivSize": 104,
      "tagSize": 64
    },
    "folder": "aead",
    "references": ["RFC 5528"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_ccm_192_104_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "CamelliaCcm",
      "keySize": 192,
      "ivSize": 104,
      "tagSize": 64
    },
    "folder": "aead",
    "references": ["RFC 5528"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_ccm_256_104_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "CamelliaCcm",
      "keySize": 256,
      "ivSize": 104,
      "tagSize": 64
    },
    "folder": "aead",
    "references": ["RFC 5528"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_ccm_128_104_80.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "CamelliaCcm",
      "keySize": 128,
      "ivSize": 104,
      "tagSize": 80
    },
    "folder": "aead",
    "references": ["RFC 5528"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_ccm_192_104_80.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "CamelliaCcm",
      "keySize": 192,
      "ivSize": 104,
      "tagSize": 80
    },
    "folder": "aead",
    "references": ["RFC 5528"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_ccm_256_104_80.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "CamelliaCcm",
      "keySize": 256,
      "ivSize": 104,
      "tagSize": 80
    },
    "folder": "aead",
    "references": ["RFC 5528"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "seed_ccm_128_96_80.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "SeedCcm",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 80
    },
    "folder": "aead",
    "references": ["RFC 5669"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "seed_ccm_128_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "SeedCcm",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 5669"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "sm4_ccm_128_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "Sm4Ccm",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 8998"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_ccm_128_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AriaCcm",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 5794"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_ccm_192_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AriaCcm",
      "keySize": 192,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 5794"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_ccm_256_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AriaCcm",
      "keySize": 256,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 5794"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 126,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_ccm_128_104_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AriaCcm",
      "keySize": 128,
      "ivSize": 104,
      "tagSize": 64
    },
    "folder": "aead",
    "references": ["RFC 5794"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_ccm_192_104_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AriaCcm",
      "keySize": 192,
      "ivSize": 104,
      "tagSize": 64
    },
    "folder": "aead",
    "references": ["RFC 5794"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_ccm_256_104_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AriaCcm",
      "keySize": 256,
      "ivSize": 104,
      "tagSize": 64
    },
    "folder": "aead",
    "references": ["RFC 5794"],
    "testStatus": {
      "ccm": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 118,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_eax_128_128_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesEax",
      "keySize": 128,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [
      "draft-ietf-openpgp-crypto-refresh-12",
      "RFC 9580"
    ],
    "testStatus": {
      "eax": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 152,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_eax_192_128_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesEax",
      "keySize": 192,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [
      "draft-ietf-openpgp-crypto-refresh-12",
      "RFC 9580"
    ],
    "testStatus": {
      "eax": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 138,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_eax_256_128_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesEax",
      "keySize": 256,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [
      "draft-ietf-openpgp-crypto-refresh-12",
      "RFC 9580"
    ],
    "testStatus": {
      "eax": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 138,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_eax_128_128_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "CamelliaEax",
      "keySize": 128,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 9580"],
    "testStatus": {
      "eax": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 138,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_eax_192_128_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "CamelliaEax",
      "keySize": 192,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 9580"],
    "testStatus": {
      "eax": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 138,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_eax_256_128_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "CamelliaEax",
      "keySize": 256,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 9580"],
    "testStatus": {
      "eax": {
        "language": "rust",
        "libVersion": "\"0.5.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 138,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "twofish_eax_256_128_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "TwofishEax",
      "keySize": 256,
      "ivSize": 128,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 9580"],
    "testStatus": {}
  },
  "aes_ocb_128_96_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesOcb",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 64
    },
    "folder": "aead",
    "references": ["RFC 7253"],
    "testStatus": {
      "ocb": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-08-11 12:16",
        "testVersion": "0.46",
        "passed": 130,
        "skipped": 0,
        "failed": 0
      },
      "ocb3": {
        "language": "rust",
        "libVersion": "\"0.1.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 130,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ocb_128_96_96.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesOcb",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 96
    },
    "folder": "aead",
    "references": ["RFC 7253"],
    "testStatus": {
      "ocb": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-08-11 12:16",
        "testVersion": "0.46",
        "passed": 138,
        "skipped": 0,
        "failed": 0
      },
      "ocb3": {
        "language": "rust",
        "libVersion": "\"0.1.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 138,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ocb_128_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesOcb",
      "keySize": 128,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 7253"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 138,
        "skipped": 0,
        "failed": 0
      },
      "ocb": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-08-11 12:16",
        "testVersion": "0.46",
        "passed": 138,
        "skipped": 0,
        "failed": 0
      },
      "ocb3": {
        "language": "rust",
        "libVersion": "\"0.1.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 138,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 276,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ocb_192_96_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesOcb",
      "keySize": 192,
      "ivSize": 96,
      "tagSize": 64
    },
    "folder": "aead",
    "references": ["RFC 7253"],
    "testStatus": {
      "ocb": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-08-11 12:16",
        "testVersion": "0.46",
        "passed": 116,
        "skipped": 0,
        "failed": 0
      },
      "ocb3": {
        "language": "rust",
        "libVersion": "\"0.1.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 116,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ocb_192_96_96.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesOcb",
      "keySize": 192,
      "ivSize": 96,
      "tagSize": 96
    },
    "folder": "aead",
    "references": ["RFC 7253"],
    "testStatus": {
      "ocb": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-08-11 12:16",
        "testVersion": "0.46",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      },
      "ocb3": {
        "language": "rust",
        "libVersion": "\"0.1.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ocb_192_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesOcb",
      "keySize": 192,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 7253"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      },
      "ocb": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-08-11 12:16",
        "testVersion": "0.46",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      },
      "ocb3": {
        "language": "rust",
        "libVersion": "\"0.1.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 248,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ocb_256_96_64.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesOcb",
      "keySize": 256,
      "ivSize": 96,
      "tagSize": 64
    },
    "folder": "aead",
    "references": ["RFC 7253"],
    "testStatus": {
      "ocb": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-08-11 12:16",
        "testVersion": "0.46",
        "passed": 116,
        "skipped": 0,
        "failed": 0
      },
      "ocb3": {
        "language": "rust",
        "libVersion": "\"0.1.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 116,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ocb_256_96_96.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesOcb",
      "keySize": 256,
      "ivSize": 96,
      "tagSize": 96
    },
    "folder": "aead",
    "references": ["RFC 7253"],
    "testStatus": {
      "ocb": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-08-11 12:16",
        "testVersion": "0.46",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      },
      "ocb3": {
        "language": "rust",
        "libVersion": "\"0.1.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ocb_256_96_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesOcb",
      "keySize": 256,
      "ivSize": 96,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["RFC 7253"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      },
      "ocb": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-08-11 12:16",
        "testVersion": "0.46",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      },
      "ocb3": {
        "language": "rust",
        "libVersion": "\"0.1.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 248,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ocb_128_120_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesOcb",
      "keySize": 128,
      "ivSize": 120,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [
      "draft-ietf-openpgp-crypto-refresh-12",
      "RFC 9580"
    ],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 138,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 276,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ocb_192_120_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesOcb",
      "keySize": 192,
      "ivSize": 120,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [
      "draft-ietf-openpgp-crypto-refresh-12",
      "RFC 9580"
    ],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 248,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ocb_256_120_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "AesOcb",
      "keySize": 256,
      "ivSize": 120,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [
      "draft-ietf-openpgp-crypto-refresh-12",
      "RFC 9580"
    ],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 248,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_ocb_128_120_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "CamelliaOcb",
      "keySize": 128,
      "ivSize": 120,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [
      "draft-ietf-openpgp-crypto-refresh-12",
      "RFC 9580"
    ],
    "testStatus": {
      "ocb": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-08-11 12:16",
        "testVersion": "0.46",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      },
      "ocb3": {
        "language": "rust",
        "libVersion": "\"0.1.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_ocb_192_120_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "CamelliaOcb",
      "keySize": 192,
      "ivSize": 120,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [
      "draft-ietf-openpgp-crypto-refresh-12",
      "RFC 9580"
    ],
    "testStatus": {
      "ocb": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-08-11 12:16",
        "testVersion": "0.46",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      },
      "ocb3": {
        "language": "rust",
        "libVersion": "\"0.1.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_ocb_256_120_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "CamelliaOcb",
      "keySize": 256,
      "ivSize": 120,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [
      "draft-ietf-openpgp-crypto-refresh-12",
      "RFC 9580"
    ],
    "testStatus": {
      "ocb": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-08-11 12:16",
        "testVersion": "0.46",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      },
      "ocb3": {
        "language": "rust",
        "libVersion": "\"0.1.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "twofish_ocb_256_120_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "TwofishOcb",
      "keySize": 256,
      "ivSize": 120,
      "tagSize": 128
    },
    "folder": "aead",
    "references": [
      "draft-ietf-openpgp-crypto-refresh-12",
      "RFC 9580"
    ],
    "testStatus": {
      "ocb": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-08-11 12:16",
        "testVersion": "0.46",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      },
      "ocb3": {
        "language": "rust",
        "libVersion": "\"0.1.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "serpent_ocb_128_120_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "SerpentOcb",
      "keySize": 128,
      "ivSize": 120,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["Note: Serpent/OCB"],
    "testStatus": {
      "ocb": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-08-11 12:16",
        "testVersion": "0.46",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      },
      "ocb3": {
        "language": "rust",
        "libVersion": "\"0.1.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 124,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "serpent_ocb_256_120_128.json": {
    "type": "Aead",
    "alg": {
      "algorithmType": "Aead",
      "primitive": "SerpentOcb",
      "keySize": 256,
      "ivSize": 120,
      "tagSize": 128
    },
    "folder": "aead",
    "references": ["Note: Serpent/OCB"],
    "testStatus": {}
  },
  "aes_xts_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesXts",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Xts"
    },
    "folder": "ind_cpa",
    "references": ["NIST SP 800-38e"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 37,
        "skipped": 4,
        "failed": 0
      },
      "xts": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 41,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_xts_384_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesXts",
      "keySize": 384,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Xts"
    },
    "folder": "ind_cpa",
    "references": ["NIST SP 800-38e"],
    "testStatus": {
      "xts": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 41,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_xts_512_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesXts",
      "keySize": 512,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Xts"
    },
    "folder": "ind_cpa",
    "references": ["NIST SP 800-38e"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 37,
        "skipped": 4,
        "failed": 0
      },
      "xts": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 41,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "sm4_xts_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "Sm4Xts",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "SM4",
      "mode": "Xts"
    },
    "folder": "ind_cpa",
    "references": ["Filesystem-level encryption (fscrypt)"],
    "testStatus": {
      "xts": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 41,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "twofish_xts_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "TwofishXts",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Twofish",
      "mode": "Xts"
    },
    "folder": "ind_cpa",
    "references": [
      "Note: BestCrypt-XTS",
      "Note: VeraCrypt-XTS"
    ],
    "testStatus": {
      "xts": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 41,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "twofish_xts_512_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "TwofishXts",
      "keySize": 512,
      "ivSize": 128,
      "cipher": "Twofish",
      "mode": "Xts"
    },
    "folder": "ind_cpa",
    "references": [
      "Note: BestCrypt-XTS",
      "Note: VeraCrypt-XTS"
    ],
    "testStatus": {
      "xts": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 41,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "serpent_xts_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SerpentXts",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Serpent",
      "mode": "Xts"
    },
    "folder": "ind_cpa",
    "references": [
      "Note: BestCrypt-XTS",
      "Note: VeraCrypt-XTS"
    ],
    "testStatus": {
      "xts": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 41,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "serpent_xts_512_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SerpentXts",
      "keySize": 512,
      "ivSize": 128,
      "cipher": "Serpent",
      "mode": "Xts"
    },
    "folder": "ind_cpa",
    "references": [
      "Note: BestCrypt-XTS",
      "Note: VeraCrypt-XTS"
    ],
    "testStatus": {
      "xts": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 41,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_xts_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "CamelliaXts",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Camellia",
      "mode": "Xts"
    },
    "folder": "ind_cpa",
    "references": ["Note: VeraCrypt-XTS"],
    "testStatus": {
      "xts": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 41,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_xts_512_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "CamelliaXts",
      "keySize": 512,
      "ivSize": 128,
      "cipher": "Camellia",
      "mode": "Xts"
    },
    "folder": "ind_cpa",
    "references": ["Note: VeraCrypt-XTS"],
    "testStatus": {
      "xts": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 41,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_cbc_pkcs7_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCbcPkcs7",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cbc": {
        "language": "rust",
        "libVersion": "{ version = \"0.1.2\", features = [\"block-padding\", \"alloc\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_cbc_pkcs7_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCbcPkcs7",
      "keySize": 192,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cbc": {
        "language": "rust",
        "libVersion": "{ version = \"0.1.2\", features = [\"block-padding\", \"alloc\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_cbc_pkcs7_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCbcPkcs7",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cbc": {
        "language": "rust",
        "libVersion": "{ version = \"0.1.2\", features = [\"block-padding\", \"alloc\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_cbc_x923_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCbcX923",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Cbc",
      "padding": "X923Padding",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cbc": {
        "language": "rust",
        "libVersion": "{ version = \"0.1.2\", features = [\"block-padding\", \"alloc\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_cbc_x923_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCbcX923",
      "keySize": 192,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Cbc",
      "padding": "X923Padding",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cbc": {
        "language": "rust",
        "libVersion": "{ version = \"0.1.2\", features = [\"block-padding\", \"alloc\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_cbc_x923_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCbcX923",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Cbc",
      "padding": "X923Padding",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cbc": {
        "language": "rust",
        "libVersion": "{ version = \"0.1.2\", features = [\"block-padding\", \"alloc\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_cbc_iso7816_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCbcIso7816",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Cbc",
      "padding": "Iso7816Padding",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cbc": {
        "language": "rust",
        "libVersion": "{ version = \"0.1.2\", features = [\"block-padding\", \"alloc\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_cbc_iso7816_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCbcIso7816",
      "keySize": 192,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Cbc",
      "padding": "Iso7816Padding",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cbc": {
        "language": "rust",
        "libVersion": "{ version = \"0.1.2\", features = [\"block-padding\", \"alloc\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_cbc_iso7816_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCbcIso7816",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Cbc",
      "padding": "Iso7816Padding",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cbc": {
        "language": "rust",
        "libVersion": "{ version = \"0.1.2\", features = [\"block-padding\", \"alloc\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_cbc_pkcs7_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AriaCbcPkcs7",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Aria",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cbc": {
        "language": "rust",
        "libVersion": "{ version = \"0.1.2\", features = [\"block-padding\", \"alloc\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_cbc_pkcs7_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AriaCbcPkcs7",
      "keySize": 192,
      "ivSize": 128,
      "cipher": "Aria",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cbc": {
        "language": "rust",
        "libVersion": "{ version = \"0.1.2\", features = [\"block-padding\", \"alloc\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_cbc_pkcs7_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AriaCbcPkcs7",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Aria",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cbc": {
        "language": "rust",
        "libVersion": "{ version = \"0.1.2\", features = [\"block-padding\", \"alloc\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_cbc_pkcs7_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "CamelliaCbcPkcs7",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Camellia",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cbc": {
        "language": "rust",
        "libVersion": "{ version = \"0.1.2\", features = [\"block-padding\", \"alloc\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_cbc_pkcs7_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "CamelliaCbcPkcs7",
      "keySize": 192,
      "ivSize": 128,
      "cipher": "Camellia",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cbc": {
        "language": "rust",
        "libVersion": "{ version = \"0.1.2\", features = [\"block-padding\", \"alloc\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_cbc_pkcs7_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "CamelliaCbcPkcs7",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Camellia",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cbc": {
        "language": "rust",
        "libVersion": "{ version = \"0.1.2\", features = [\"block-padding\", \"alloc\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rc5_32_12_16_cbc_pkcs7_128_64.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "Rc5_32_12_16_CbcPkcs7",
      "keySize": 128,
      "ivSize": 64,
      "cipher": "Rc5_32_12_16",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 64
    },
    "folder": "ind_cpa",
    "references": ["RFC 2040"],
    "testStatus": {}
  },
  "seed_cbc_pkcs7_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SeedCbcPkcs7",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Seed",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cbc": {
        "language": "rust",
        "libVersion": "{ version = \"0.1.2\", features = [\"block-padding\", \"alloc\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "sm4_cbc_pkcs7_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "Sm4CbcPkcs7",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "SM4",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cbc": {
        "language": "rust",
        "libVersion": "{ version = \"0.1.2\", features = [\"block-padding\", \"alloc\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "serpent_cbc_pkcs7_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SerpentCbcPkcs7",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Serpent",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cbc": {
        "language": "rust",
        "libVersion": "{ version = \"0.1.2\", features = [\"block-padding\", \"alloc\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "serpent_cbc_pkcs7_160_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SerpentCbcPkcs7",
      "keySize": 160,
      "ivSize": 128,
      "cipher": "Serpent",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {}
  },
  "serpent_cbc_pkcs7_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SerpentCbcPkcs7",
      "keySize": 192,
      "ivSize": 128,
      "cipher": "Serpent",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {}
  },
  "serpent_cbc_pkcs7_224_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SerpentCbcPkcs7",
      "keySize": 224,
      "ivSize": 128,
      "cipher": "Serpent",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {}
  },
  "serpent_cbc_pkcs7_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SerpentCbcPkcs7",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Serpent",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {}
  },
  "twofish_cbc_pkcs7_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "TwofishCbcPkcs7",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Twofish",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {}
  },
  "twofish_cbc_pkcs7_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "TwofishCbcPkcs7",
      "keySize": 192,
      "ivSize": 128,
      "cipher": "Twofish",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {}
  },
  "twofish_cbc_pkcs7_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "TwofishCbcPkcs7",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Twofish",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cbc": {
        "language": "rust",
        "libVersion": "{ version = \"0.1.2\", features = [\"block-padding\", \"alloc\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "triple_des_cbc_pkcs7_192_64.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "TripleDesCbcPkcs7",
      "keySize": 192,
      "ivSize": 64,
      "cipher": "TripleDes",
      "mode": "Cbc",
      "padding": "Pkcs7",
      "paddingSize": 64
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "des": {
        "language": "rust",
        "libVersion": "\"0.8.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "triple_des_cbc_x923_192_64.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "TripleDesCbcX923",
      "keySize": 192,
      "ivSize": 64,
      "cipher": "TripleDes",
      "mode": "Cbc",
      "padding": "X923Padding",
      "paddingSize": 64
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {}
  },
  "aes_cbc_cs1_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCbcCs1",
      "keySize": 128,
      "ivSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {}
  },
  "aes_cbc_cs1_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCbcCs1",
      "keySize": 192,
      "ivSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {}
  },
  "aes_cbc_cs1_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCbcCs1",
      "keySize": 256,
      "ivSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {}
  },
  "aes_cbc_cs3_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCbcCs3",
      "keySize": 128,
      "ivSize": 128
    },
    "folder": "ind_cpa",
    "references": ["RFC 3962"],
    "testStatus": {}
  },
  "aes_cbc_cs3_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCbcCs3",
      "keySize": 192,
      "ivSize": 128
    },
    "folder": "ind_cpa",
    "references": ["RFC 3962"],
    "testStatus": {}
  },
  "aes_cbc_cs3_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCbcCs3",
      "keySize": 256,
      "ivSize": 128
    },
    "folder": "ind_cpa",
    "references": ["RFC 3962"],
    "testStatus": {}
  },
  "rc5_64_20_cbc_cs3_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "Rc5_64_20CbcCs3",
      "keySize": 128,
      "ivSize": 128
    },
    "folder": "ind_cpa",
    "references": ["RFC 2040"],
    "testStatus": {}
  },
  "sm4_cbc_cs3_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "Sm4CbcCs3",
      "keySize": 128,
      "ivSize": 128
    },
    "folder": "ind_cpa",
    "references": ["fscrypt"],
    "testStatus": {}
  },
  "aes_cfb8_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCfb8",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Cfb",
      "feedback": 8
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb8": {
        "language": "rust",
        "libVersion": "\"0.8.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_cfb8_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCfb8",
      "keySize": 192,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Cfb",
      "feedback": 8
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb8": {
        "language": "rust",
        "libVersion": "\"0.8.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_cfb8_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCfb8",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Cfb",
      "feedback": 8
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb8": {
        "language": "rust",
        "libVersion": "\"0.8.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_cfb128_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCfb128",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Cfb",
      "feedback": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb_mode": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_cfb128_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCfb128",
      "keySize": 192,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Cfb",
      "feedback": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb_mode": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_cfb128_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesCfb128",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Cfb",
      "feedback": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb_mode": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_cfb8_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AriaCfb8",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Aria",
      "mode": "Cfb",
      "feedback": 8
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb8": {
        "language": "rust",
        "libVersion": "\"0.8.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_cfb8_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AriaCfb8",
      "keySize": 192,
      "ivSize": 128,
      "cipher": "Aria",
      "mode": "Cfb",
      "feedback": 8
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb8": {
        "language": "rust",
        "libVersion": "\"0.8.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_cfb8_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AriaCfb8",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Aria",
      "mode": "Cfb",
      "feedback": 8
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb8": {
        "language": "rust",
        "libVersion": "\"0.8.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_cfb128_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AriaCfb128",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Aria",
      "mode": "Cfb",
      "feedback": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb_mode": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_cfb128_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AriaCfb128",
      "keySize": 192,
      "ivSize": 128,
      "cipher": "Aria",
      "mode": "Cfb",
      "feedback": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb_mode": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_cfb128_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AriaCfb128",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Aria",
      "mode": "Cfb",
      "feedback": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb_mode": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_cfb8_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "CamelliaCfb8",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Camellia",
      "mode": "Cfb",
      "feedback": 8
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb8": {
        "language": "rust",
        "libVersion": "\"0.8.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_cfb8_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "CamelliaCfb8",
      "keySize": 192,
      "ivSize": 128,
      "cipher": "Camellia",
      "mode": "Cfb",
      "feedback": 8
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb8": {
        "language": "rust",
        "libVersion": "\"0.8.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_cfb8_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "CamelliaCfb8",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Camellia",
      "mode": "Cfb",
      "feedback": 8
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb8": {
        "language": "rust",
        "libVersion": "\"0.8.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_cfb128_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "CamelliaCfb128",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Camellia",
      "mode": "Cfb",
      "feedback": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb_mode": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_cfb128_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "CamelliaCfb128",
      "keySize": 192,
      "ivSize": 128,
      "cipher": "Camellia",
      "mode": "Cfb",
      "feedback": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb_mode": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_cfb128_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "CamelliaCfb128",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Camellia",
      "mode": "Cfb",
      "feedback": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb_mode": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "seed_cfb8_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SeedCfb8",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Seed",
      "mode": "Cfb",
      "feedback": 8
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb8": {
        "language": "rust",
        "libVersion": "\"0.8.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "seed_cfb128_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SeedCfb128",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Seed",
      "mode": "Cfb",
      "feedback": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb_mode": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "sm4_cfb8_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "Sm4Cfb8",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "SM4",
      "mode": "Cfb",
      "feedback": 8
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb8": {
        "language": "rust",
        "libVersion": "\"0.8.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "sm4_cfb128_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "Sm4Cfb128",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "SM4",
      "mode": "Cfb",
      "feedback": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb_mode": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "serpent_cfb8_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SerpentCfb8",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Serpent",
      "mode": "Cfb",
      "feedback": 8
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb8": {
        "language": "rust",
        "libVersion": "\"0.8.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "serpent_cfb8_160_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SerpentCfb8",
      "keySize": 160,
      "ivSize": 128,
      "cipher": "Serpent",
      "mode": "Cfb",
      "feedback": 8
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {}
  },
  "serpent_cfb8_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SerpentCfb8",
      "keySize": 192,
      "ivSize": 128,
      "cipher": "Serpent",
      "mode": "Cfb",
      "feedback": 8
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {}
  },
  "serpent_cfb8_224_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SerpentCfb8",
      "keySize": 224,
      "ivSize": 128,
      "cipher": "Serpent",
      "mode": "Cfb",
      "feedback": 8
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {}
  },
  "serpent_cfb8_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SerpentCfb8",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Serpent",
      "mode": "Cfb",
      "feedback": 8
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {}
  },
  "serpent_cfb128_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SerpentCfb128",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Serpent",
      "mode": "Cfb",
      "feedback": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "cfb_mode": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "serpent_cfb128_160_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SerpentCfb128",
      "keySize": 160,
      "ivSize": 128,
      "cipher": "Serpent",
      "mode": "Cfb",
      "feedback": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {}
  },
  "serpent_cfb128_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SerpentCfb128",
      "keySize": 192,
      "ivSize": 128,
      "cipher": "Serpent",
      "mode": "Cfb",
      "feedback": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {}
  },
  "serpent_cfb128_224_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SerpentCfb128",
      "keySize": 224,
      "ivSize": 128,
      "cipher": "Serpent",
      "mode": "Cfb",
      "feedback": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {}
  },
  "serpent_cfb128_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SerpentCfb128",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Serpent",
      "mode": "Cfb",
      "feedback": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {}
  },
  "triple_des_cfb8_192_64.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "TripleDesCfb8",
      "keySize": 192,
      "ivSize": 64,
      "cipher": "TripleDes",
      "mode": "Cfb",
      "feedback": 8
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "des": {
        "language": "rust",
        "libVersion": "\"0.8.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "triple_des_cfb64_192_64.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "TripleDesCfb64",
      "keySize": 192,
      "ivSize": 64,
      "cipher": "TripleDes",
      "mode": "Cfb",
      "feedback": 64
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "des": {
        "language": "rust",
        "libVersion": "\"0.8.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ofb_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesOfb",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Ofb"
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "ofb": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ofb_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesOfb",
      "keySize": 192,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Ofb"
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "ofb": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ofb_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesOfb",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Ofb"
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "ofb": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_ofb_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AriaOfb",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Aria",
      "mode": "Ofb"
    },
    "folder": "ind_cpa",
    "references": ["RFC 5794"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "ofb": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_ofb_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AriaOfb",
      "keySize": 192,
      "ivSize": 128,
      "cipher": "Aria",
      "mode": "Ofb"
    },
    "folder": "ind_cpa",
    "references": ["RFC 5794"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "ofb": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_ofb_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AriaOfb",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Aria",
      "mode": "Ofb"
    },
    "folder": "ind_cpa",
    "references": ["RFC 5794"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "ofb": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_ofb_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "CamelliaOfb",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Camellia",
      "mode": "Ofb"
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "ofb": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_ofb_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "CamelliaOfb",
      "keySize": 192,
      "ivSize": 128,
      "cipher": "Camellia",
      "mode": "Ofb"
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "ofb": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_ofb_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "CamelliaOfb",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Camellia",
      "mode": "Ofb"
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "ofb": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "sm4_ofb_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "Sm4Ofb",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "SM4",
      "mode": "Ofb"
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "seed_ofb_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "SeedOfb",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Seed",
      "mode": "Ofb"
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {}
  },
  "triple_des_ofb_192_64.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "TripleDesOfb",
      "keySize": 192,
      "ivSize": 64,
      "cipher": "TripleDes",
      "mode": "Ofb"
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {}
  },
  "aes_pcbc_pkcs7_128_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesPcbcPkcs7",
      "keySize": 128,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Pcbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "pcbc": {
        "language": "rust",
        "libVersion": "\"0.1.2\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_pcbc_pkcs7_192_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesPcbcPkcs7",
      "keySize": 192,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Pcbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "pcbc": {
        "language": "rust",
        "libVersion": "\"0.1.2\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_pcbc_pkcs7_256_128.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "AesPcbcPkcs7",
      "keySize": 256,
      "ivSize": 128,
      "cipher": "Aes",
      "mode": "Pcbc",
      "padding": "Pkcs7",
      "paddingSize": 128
    },
    "folder": "ind_cpa",
    "references": [],
    "testStatus": {
      "pcbc": {
        "language": "rust",
        "libVersion": "\"0.1.2\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 57,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rabbit_128_64.json": {
    "type": "IndCpa",
    "alg": {
      "algorithmType": "IndCpa",
      "primitive": "Rabbit",
      "keySize": 128,
      "ivSize": 64,
      "cipher": "Rabbit"
    },
    "folder": "ind_cpa",
    "references": ["RFC 4503"],
    "testStatus": {
      "rabbit": {
        "language": "rust",
        "libVersion": "\"0.4.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 59,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_128.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Aes",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "aes": {
        "language": "rust",
        "libVersion": "\"0.8.4\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 24,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 24,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_192.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Aes",
      "keySize": 192
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "aes": {
        "language": "rust",
        "libVersion": "\"0.8.4\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 24,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 24,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_256.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Aes",
      "keySize": 256
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "aes": {
        "language": "rust",
        "libVersion": "\"0.8.4\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 24,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 24,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_128.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Aria",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "aria": {
        "language": "rust",
        "libVersion": "\"0.1.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 20,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_192.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Aria",
      "keySize": 192
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "aria": {
        "language": "rust",
        "libVersion": "\"0.1.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 20,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_256.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Aria",
      "keySize": 256
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "aria": {
        "language": "rust",
        "libVersion": "\"0.1.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 20,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_128.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Camellia",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "camellia": {
        "language": "rust",
        "libVersion": "\"0.1.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_192.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Camellia",
      "keySize": 192
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "camellia": {
        "language": "rust",
        "libVersion": "\"0.1.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 27,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 27,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_256.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Camellia",
      "keySize": 256
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "camellia": {
        "language": "rust",
        "libVersion": "\"0.1.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 27,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 27,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "sm4_128.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "SM4",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 22,
        "skipped": 0,
        "failed": 0
      },
      "sm4": {
        "language": "rust",
        "libVersion": "\"0.5.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 22,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "seed_128.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Seed",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "kisaseed": {
        "language": "rust",
        "libVersion": "\"0.1.3\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 20,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "twofish_128.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Twofish",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "twofish": {
        "language": "rust",
        "libVersion": "\"0.7.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 28,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "twofish_192.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Twofish",
      "keySize": 192
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "twofish": {
        "language": "rust",
        "libVersion": "\"0.7.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 28,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "twofish_256.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Twofish",
      "keySize": 256
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "twofish": {
        "language": "rust",
        "libVersion": "\"0.7.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 28,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rc5_32_16_128.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rc5_32_16",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "rc5": {
        "language": "rust",
        "libVersion": "\"0.0.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 20,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rc5_64_20_128.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rc5_64_20",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {}
  },
  "rc5_64_24_192.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rc5_64_24",
      "keySize": 192
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "rc5": {
        "language": "rust",
        "libVersion": "\"0.0.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 20,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rc6_32_20_128.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rc6_32_20",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {}
  },
  "rc6_32_20_192.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rc6_32_20",
      "keySize": 192
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {}
  },
  "rc6_32_20_256.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rc6_32_20",
      "keySize": 256
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {}
  },
  "rc6_64_24_128.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rc6_64_24",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {}
  },
  "rc6_64_24_192.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rc6_64_24",
      "keySize": 192
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {}
  },
  "rc6_64_24_256.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rc6_64_24",
      "keySize": 256
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {}
  },
  "rc6_128_28_128.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rc6_128_28",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {}
  },
  "rc6_128_28_256.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rc6_128_28",
      "keySize": 256
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {}
  },
  "serpent_128.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Serpent",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "serpent": {
        "language": "rust",
        "libVersion": "\"0.5.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 32,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "serpent_160.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Serpent",
      "keySize": 160
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "serpent": {
        "language": "rust",
        "libVersion": "\"0.5.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 32,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "serpent_192.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Serpent",
      "keySize": 192
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "serpent": {
        "language": "rust",
        "libVersion": "\"0.5.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 32,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "serpent_224.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Serpent",
      "keySize": 224
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "serpent": {
        "language": "rust",
        "libVersion": "\"0.5.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 32,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "serpent_256.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Serpent",
      "keySize": 256
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "serpent": {
        "language": "rust",
        "libVersion": "\"0.5.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 32,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "speck64_96.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Speck64",
      "keySize": 96
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "speck_cipher": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 22,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "speck64_128.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Speck64",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "speck_cipher": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 22,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "speck96_96.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Speck96",
      "keySize": 96
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "speck_cipher": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 22,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "speck96_144.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Speck96",
      "keySize": 144
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "speck_cipher": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 22,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "speck128_128.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Speck128",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "speck_cipher": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 22,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "speck128_192.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Speck128",
      "keySize": 192
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "speck_cipher": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 22,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "speck128_256.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Speck128",
      "keySize": 256
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "speck_cipher": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 22,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "speck_little_endian64_96.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "SpeckLittleEndian64",
      "keySize": 96
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {}
  },
  "speck_little_endian64_128.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "SpeckLittleEndian64",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {}
  },
  "speck_little_endian96_96.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "SpeckLittleEndian96",
      "keySize": 96
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {}
  },
  "speck_little_endian96_144.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "SpeckLittleEndian96",
      "keySize": 144
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {}
  },
  "speck_little_endian128_128.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "SpeckLittleEndian128",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {}
  },
  "speck_little_endian128_192.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "SpeckLittleEndian128",
      "keySize": 192
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {}
  },
  "speck_little_endian128_256.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "SpeckLittleEndian128",
      "keySize": 256
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {}
  },
  "rc5_32_12_16.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rc5_32_12_16",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "rc5": {
        "language": "rust",
        "libVersion": "\"0.0.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 20,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "xtea.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Xtea",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {}
  },
  "kuznyechik.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Kuznyechik",
      "keySize": 256
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {}
  },
  "des.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Des",
      "keySize": 64
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "des": {
        "language": "rust",
        "libVersion": "\"0.8.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 22,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "triple_des.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "TripleDes",
      "keySize": 192
    },
    "folder": "block_cipher",
    "references": [],
    "testStatus": {
      "des": {
        "language": "rust",
        "libVersion": "\"0.8.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 32,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 32,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rijndael160_128.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rijndael160",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": ["Rijndael"],
    "testStatus": {}
  },
  "rijndael160_192.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rijndael160",
      "keySize": 192
    },
    "folder": "block_cipher",
    "references": ["Rijndael"],
    "testStatus": {}
  },
  "rijndael160_256.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rijndael160",
      "keySize": 256
    },
    "folder": "block_cipher",
    "references": ["Rijndael"],
    "testStatus": {}
  },
  "rijndael192_128.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rijndael192",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": ["Rijndael"],
    "testStatus": {}
  },
  "rijndael192_192.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rijndael192",
      "keySize": 192
    },
    "folder": "block_cipher",
    "references": ["Rijndael"],
    "testStatus": {}
  },
  "rijndael192_256.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rijndael192",
      "keySize": 256
    },
    "folder": "block_cipher",
    "references": ["Rijndael"],
    "testStatus": {}
  },
  "rijndael224_128.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rijndael224",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": ["Rijndael"],
    "testStatus": {}
  },
  "rijndael224_192.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rijndael224",
      "keySize": 192
    },
    "folder": "block_cipher",
    "references": ["Rijndael"],
    "testStatus": {}
  },
  "rijndael224_256.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rijndael224",
      "keySize": 256
    },
    "folder": "block_cipher",
    "references": ["Rijndael"],
    "testStatus": {}
  },
  "rijndael256_128.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rijndael256",
      "keySize": 128
    },
    "folder": "block_cipher",
    "references": ["Rijndael"],
    "testStatus": {}
  },
  "rijndael256_192.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rijndael256",
      "keySize": 192
    },
    "folder": "block_cipher",
    "references": ["Rijndael"],
    "testStatus": {}
  },
  "rijndael256_256.json": {
    "type": "BlockCipher",
    "alg": {
      "algorithmType": "BlockCipher",
      "primitive": "Rijndael256",
      "keySize": 256
    },
    "folder": "block_cipher",
    "references": ["Rijndael"],
    "testStatus": {}
  },
  "rc4.json": {
    "type": "StreamCipherWithoutIv",
    "alg": {
      "algorithmType": "StreamCipherWithoutIv",
      "primitive": "Rc4",
      "keySize": {
        "min": 8,
        "max": 2048,
        "default": 128
      }
    },
    "folder": "stream_cipher",
    "references": [],
    "testStatus": {}
  },
  "ecdsa_secp160r1_sha_224.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp160r1",
      "sha": "SHA-224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 394,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp160r1_sha_224_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp160r1",
      "sha": "SHA-224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 273,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp160r1_sha_256.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp160r1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 555,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp160r1_sha_256_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp160r1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 434,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp192r1_sha_224.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp192r1",
      "sha": "SHA-224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 402,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 402,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp192r1_sha_224_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp192r1",
      "sha": "SHA-224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 280,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp192r1_sha_256.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp192r1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "elliptic": {
        "language": "javascript",
        "libVersion": "6.6.1",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 564,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 564,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 564,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp192r1_sha_256_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp192r1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 442,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_prime192v2_sha_224.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "prime192v2",
      "sha": "SHA-224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 406,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_prime192v2_sha_224_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "prime192v2",
      "sha": "SHA-224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 284,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_prime192v2_sha_256.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "prime192v2",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 567,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_prime192v2_sha_256_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "prime192v2",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 445,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp224r1_sha_224.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224r1",
      "sha": "SHA-224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 403,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 403,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp224r1_sha_224_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224r1",
      "sha": "SHA-224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 281,
        "skipped": 0,
        "failed": 0
      },
      "p224": {
        "language": "rust",
        "libVersion": "{version=\"0.13.2\", features=[\"ecdh\"]}",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 281,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp224r1_sha_256.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224r1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "elliptic": {
        "language": "javascript",
        "libVersion": "6.6.1",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 566,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 566,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 566,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp224r1_sha_256_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224r1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 444,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp224r1_sha_512.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224r1",
      "sha": "SHA-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "elliptic": {
        "language": "javascript",
        "libVersion": "6.6.1",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 740,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 740,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 740,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp224r1_sha_512_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224r1",
      "sha": "SHA-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 618,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp224r1_sha3_256.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224r1",
      "sha": "SHA3-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 574,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 574,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp224r1_sha3_256_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224r1",
      "sha": "SHA3-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 452,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp224r1_sha_512_224.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224r1",
      "sha": "SHA-512/224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_secp224r1_sha_512_224_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224r1",
      "sha": "SHA-512/224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_secp256r1_sha_256.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "elliptic": {
        "language": "javascript",
        "libVersion": "6.6.1",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 568,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 568,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 568,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256r1_sha_256_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 446,
        "skipped": 0,
        "failed": 0
      },
      "p256": {
        "language": "rust",
        "libVersion": "{ version = \"0.13.0\", features = [\"ecdh\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 446,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256r1_sha_384.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-384",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "elliptic": {
        "language": "javascript",
        "libVersion": "6.6.1",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 462,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 462,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 462,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256r1_sha_384_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-384",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 340,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256r1_sha_512.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "elliptic": {
        "language": "javascript",
        "libVersion": "6.6.1",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 743,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 743,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 743,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256r1_sha_512_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 621,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256r1_sha3_256.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA3-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 576,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 576,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256r1_sha3_256_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA3-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 454,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256r1_sha3_384.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA3-384",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 564,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 564,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256r1_sha3_384_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA3-384",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 442,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256r1_sha3_512.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA3-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 620,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 620,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256r1_sha3_512_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA3-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 498,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256r1_sha_512_256.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-512/256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_secp256r1_sha_512_256_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-512/256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_secp384r1_sha_384.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp384r1",
      "sha": "SHA-384",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "elliptic": {
        "language": "javascript",
        "libVersion": "6.6.1",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 451,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 451,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 451,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp384r1_sha_384_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp384r1",
      "sha": "SHA-384",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 329,
        "skipped": 0,
        "failed": 0
      },
      "p384": {
        "language": "rust",
        "libVersion": "{version=\"0.13.0\", features=[\"ecdh\"]}",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 329,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp384r1_sha_512.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp384r1",
      "sha": "SHA-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "elliptic": {
        "language": "javascript",
        "libVersion": "6.6.1",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 730,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 730,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 730,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp384r1_sha_512_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp384r1",
      "sha": "SHA-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 608,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp384r1_sha3_384.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp384r1",
      "sha": "SHA3-384",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 553,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 553,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp384r1_sha3_384_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp384r1",
      "sha": "SHA3-384",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 431,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp384r1_sha3_512.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp384r1",
      "sha": "SHA3-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 608,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 608,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp384r1_sha3_512_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp384r1",
      "sha": "SHA3-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 486,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp521r1_sha_512.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp521r1",
      "sha": "SHA-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "elliptic": {
        "language": "javascript",
        "libVersion": "6.6.1",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 741,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 741,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 741,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp521r1_sha_512_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp521r1",
      "sha": "SHA-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 620,
        "skipped": 0,
        "failed": 0
      },
      "p521": {
        "language": "rust",
        "libVersion": "{version=\"0.13.3\", features=[\"ecdh\"]}",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 620,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp521r1_sha3_512.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp521r1",
      "sha": "SHA3-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 618,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 618,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp521r1_sha3_512_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp521r1",
      "sha": "SHA3-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 497,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256k1_sha_256.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "elliptic": {
        "language": "javascript",
        "libVersion": "6.6.1",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 593,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 593,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 593,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256k1_sha_256_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 471,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256k1_sha_384.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-384",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "elliptic": {
        "language": "javascript",
        "libVersion": "6.6.1",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 488,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 488,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 488,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256k1_sha_384_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-384",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 366,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256k1_sha_512.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "elliptic": {
        "language": "javascript",
        "libVersion": "6.6.1",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 768,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 768,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 768,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256k1_sha_512_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 646,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256k1_sha3_256.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA3-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 603,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 603,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256k1_sha3_256_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA3-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 481,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256k1_sha3_384.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA3-384",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 589,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 589,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256k1_sha3_384_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA3-384",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 467,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256k1_sha3_512.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA3-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 644,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 644,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256k1_sha3_512_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA3-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 522,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256k1_sha_512_256.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-512/256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_secp256k1_sha_512_256_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-512/256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_secp256k1_keccak256.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "KECCAK256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_secp256k1_keccak256_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "KECCAK256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_secp256r1_shake128.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHAKE128",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": [
      "RFC 8702",
      "RFC 8692",
      "SEC2v1"
    ],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 484,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256r1_shake128_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHAKE128",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": [
      "RFC 8702",
      "RFC 8692",
      "SEC2v1"
    ],
    "testStatus": {}
  },
  "ecdsa_secp521r1_shake256.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp521r1",
      "sha": "SHAKE256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": [
      "RFC 8702",
      "RFC 8692",
      "SEC2v1"
    ],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 481,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp521r1_shake256_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp521r1",
      "sha": "SHAKE256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": [
      "RFC 8702",
      "RFC 8692",
      "SEC2v1"
    ],
    "testStatus": {}
  },
  "ecdsa_brainpool_p256r1_sha_256.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP256r1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 570,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 570,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_brainpool_p256r1_sha_256_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP256r1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_brainpool_p320r1_sha_384.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP320r1",
      "sha": "SHA-384",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 453,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_brainpool_p320r1_sha_384_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP320r1",
      "sha": "SHA-384",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 331,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_brainpool_p384r1_sha_384.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP384r1",
      "sha": "SHA-384",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 453,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 453,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_brainpool_p384r1_sha_384_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP384r1",
      "sha": "SHA-384",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 331,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_brainpool_p512r1_sha_512.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP512r1",
      "sha": "SHA-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 732,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 732,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_brainpool_p512r1_sha_512_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP512r1",
      "sha": "SHA-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 610,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_brainpool_p192r1_sha_224.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP192r1",
      "sha": "SHA-224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_brainpool_p192r1_sha_224_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP192r1",
      "sha": "SHA-224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_brainpool_p192t1_sha_224.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP192t1",
      "sha": "SHA-224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_brainpool_p192t1_sha_224_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP192t1",
      "sha": "SHA-224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_brainpool_p224r1_sha_224.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP224r1",
      "sha": "SHA-224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_brainpool_p224r1_sha_224_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP224r1",
      "sha": "SHA-224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_brainpool_p224t1_sha_224.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP224t1",
      "sha": "SHA-224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_brainpool_p224t1_sha_224_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP224t1",
      "sha": "SHA-224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_brainpool_p256t1_sha_256.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP256t1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 557,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_brainpool_p256t1_sha_256_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP256t1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 435,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_brainpool_p320t1_sha_384.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP320t1",
      "sha": "SHA-384",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 454,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_brainpool_p320t1_sha_384_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP320t1",
      "sha": "SHA-384",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 332,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_brainpool_p384t1_sha_384.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP384t1",
      "sha": "SHA-384",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 451,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_brainpool_p384t1_sha_384_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP384t1",
      "sha": "SHA-384",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 329,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_brainpool_p512t1_sha_512.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP512t1",
      "sha": "SHA-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 752,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_brainpool_p512t1_sha_512_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP512t1",
      "sha": "SHA-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 630,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_prime239v1_sha_256.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "prime239v1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 570,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_prime239v1_sha_256_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "prime239v1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 449,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp224k1_sha_224.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224k1",
      "sha": "SHA-224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 400,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp224k1_sha_224_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224k1",
      "sha": "SHA-224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 279,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp192k1_sha_224.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp192k1",
      "sha": "SHA-224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 427,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp192k1_sha_224_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp192k1",
      "sha": "SHA-224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 305,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_frp256v1_sha_256.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "frp256v1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["FRP256v1"],
    "testStatus": {}
  },
  "ecdsa_frp256v1_sha_256_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "frp256v1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["FRP256v1"],
    "testStatus": {}
  },
  "ecdsa_secp256r1_sha_256_jwk.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-256",
      "encoding": "JWK",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 446,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 446,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256r1_sha_384_jwk.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-384",
      "encoding": "JWK",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 340,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 340,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp256r1_sha_512_jwk.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-512",
      "encoding": "JWK",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 621,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 621,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp384r1_sha_384_jwk.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp384r1",
      "sha": "SHA-384",
      "encoding": "JWK",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 329,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 329,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp384r1_sha_512_jwk.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp384r1",
      "sha": "SHA-512",
      "encoding": "JWK",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 608,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 608,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_secp521r1_sha_512_jwk.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp521r1",
      "sha": "SHA-512",
      "encoding": "JWK",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 620,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 620,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_normalized_secp256k1_sha_256_raw.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-256",
      "encoding": "RAW",
      "normalize": true,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_normalized_secp256k1_sha_256.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": true,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_normalized_secp256k1_keccak256_raw.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "KECCAK256",
      "encoding": "RAW",
      "normalize": true,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_normalized_secp256k1_keccak256.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "KECCAK256",
      "encoding": "DER",
      "normalize": true,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_normalized_secp256r1_sha_256_raw.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-256",
      "encoding": "RAW",
      "normalize": true,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_normalized_secp256r1_keccak256_raw.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "KECCAK256",
      "encoding": "RAW",
      "normalize": true,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_secp256k1_sha_256_raw.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-256",
      "encoding": "RAW",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_secp256k1_keccak256_raw.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "KECCAK256",
      "encoding": "RAW",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_secp256r1_sha_256_raw.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-256",
      "encoding": "RAW",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_secp256r1_keccak256_raw.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "KECCAK256",
      "encoding": "RAW",
      "normalize": false,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_normalized_secp256k1_sha_256_p1363.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": true,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": [
      "Rust crate k256",
      "SEC2v1"
    ],
    "testStatus": {
      "k256": {
        "language": "rust",
        "libVersion": "{version=\"0.13.3\", features=[\"ecdh\"]}",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 470,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_normalized_secp256k1_sha_256_bitcoin.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-256",
      "encoding": "BITCOIN",
      "normalize": true,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_normalized_secp256k1_keccak256_ethereum_main.json": {
    "type": "EcdsaVerify",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "KECCAK256",
      "encoding": "ETHEREUM_MAIN",
      "normalize": true,
      "signature_generation": "Generic"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp160r1_sha_224.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp160r1",
      "sha": "SHA-224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp160r1_sha_224_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp160r1",
      "sha": "SHA-224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp160r1_sha_256.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp160r1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp160r1_sha_256_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp160r1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp192r1_sha_224.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp192r1",
      "sha": "SHA-224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 650,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp192r1_sha_224_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp192r1",
      "sha": "SHA-224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp192r1_sha_256.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp192r1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "elliptic": {
        "language": "javascript",
        "libVersion": "6.6.1",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 954,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 954,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp192r1_sha_256_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp192r1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_prime192v2_sha_224.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "prime192v2",
      "sha": "SHA-224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": [],
    "testStatus": {}
  },
  "ecdsa_rfc6979_prime192v2_sha_224_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "prime192v2",
      "sha": "SHA-224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": [],
    "testStatus": {}
  },
  "ecdsa_rfc6979_prime192v2_sha_256.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "prime192v2",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": [],
    "testStatus": {}
  },
  "ecdsa_rfc6979_prime192v2_sha_256_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "prime192v2",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": [],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp224r1_sha_224.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224r1",
      "sha": "SHA-224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 650,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp224r1_sha_224_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224r1",
      "sha": "SHA-224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "p224": {
        "language": "rust",
        "libVersion": "{version=\"0.13.2\", features=[\"ecdh\"]}",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 650,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp224r1_sha_256.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224r1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "elliptic": {
        "language": "javascript",
        "libVersion": "6.6.1",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 954,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 954,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp224r1_sha_256_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224r1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp224r1_sha_512.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224r1",
      "sha": "SHA-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 1316,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp224r1_sha_512_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224r1",
      "sha": "SHA-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp224r1_sha3_256.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224r1",
      "sha": "SHA3-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 988,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp224r1_sha3_256_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224r1",
      "sha": "SHA3-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp224r1_sha_512_224.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224r1",
      "sha": "SHA-512/224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp224r1_sha_512_224_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224r1",
      "sha": "SHA-512/224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp256r1_sha_256.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "elliptic": {
        "language": "javascript",
        "libVersion": "6.6.1",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 1178,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 1178,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp256r1_sha_256_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp256r1_sha_384.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-384",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 820,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp256r1_sha_384_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-384",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp256r1_sha_512.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 1382,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp256r1_sha_512_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp256r1_sha3_256.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA3-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 1056,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp256r1_sha3_256_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA3-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp256r1_sha3_384.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA3-384",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 966,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp256r1_sha3_384_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA3-384",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp256r1_sha3_512.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA3-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 1076,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp256r1_sha3_512_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA3-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp256r1_sha_512_256.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-512/256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp256r1_sha_512_256_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-512/256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp384r1_sha_384.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp384r1",
      "sha": "SHA-384",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "elliptic": {
        "language": "javascript",
        "libVersion": "6.6.1",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 762,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 762,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp384r1_sha_384_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp384r1",
      "sha": "SHA-384",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "p384": {
        "language": "rust",
        "libVersion": "{version=\"0.13.0\", features=[\"ecdh\"]}",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 762,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp384r1_sha_512.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp384r1",
      "sha": "SHA-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 1316,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp384r1_sha_512_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp384r1",
      "sha": "SHA-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp384r1_sha3_384.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp384r1",
      "sha": "SHA3-384",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 966,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp384r1_sha3_384_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp384r1",
      "sha": "SHA3-384",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp384r1_sha3_512.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp384r1",
      "sha": "SHA3-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 1076,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp384r1_sha3_512_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp384r1",
      "sha": "SHA3-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp521r1_sha_512.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp521r1",
      "sha": "SHA-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 1551,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp521r1_sha_512_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp521r1",
      "sha": "SHA-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp521r1_sha3_512.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp521r1",
      "sha": "SHA3-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 1076,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp521r1_sha3_512_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp521r1",
      "sha": "SHA3-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp256k1_sha_256.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "elliptic": {
        "language": "javascript",
        "libVersion": "6.6.1",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 1178,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 1178,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp256k1_sha_256_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp256k1_sha_384.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-384",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 820,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp256k1_sha_384_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-384",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp256k1_sha_512.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 1382,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp256k1_sha_512_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp256k1_sha3_256.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA3-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 1058,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp256k1_sha3_256_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA3-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp256k1_sha3_384.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA3-384",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 966,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp256k1_sha3_384_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA3-384",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp256k1_sha3_512.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA3-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 1076,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_secp256k1_sha3_512_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA3-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp256k1_sha_512_256.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-512/256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp256k1_sha_512_256_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-512/256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p256r1_sha_256.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP256r1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 1183,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_brainpool_p256r1_sha_256_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP256r1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p320r1_sha_384.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP320r1",
      "sha": "SHA-384",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p320r1_sha_384_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP320r1",
      "sha": "SHA-384",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p384r1_sha_384.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP384r1",
      "sha": "SHA-384",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 762,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_brainpool_p384r1_sha_384_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP384r1",
      "sha": "SHA-384",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p512r1_sha_512.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP512r1",
      "sha": "SHA-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 1316,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdsa_rfc6979_brainpool_p512r1_sha_512_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP512r1",
      "sha": "SHA-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p192r1_sha_224.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP192r1",
      "sha": "SHA-224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p192r1_sha_224_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP192r1",
      "sha": "SHA-224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p192t1_sha_224.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP192t1",
      "sha": "SHA-224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p192t1_sha_224_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP192t1",
      "sha": "SHA-224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p224r1_sha_224.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP224r1",
      "sha": "SHA-224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p224r1_sha_224_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP224r1",
      "sha": "SHA-224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p224t1_sha_224.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP224t1",
      "sha": "SHA-224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p224t1_sha_224_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP224t1",
      "sha": "SHA-224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p256t1_sha_256.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP256t1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p256t1_sha_256_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP256t1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p320t1_sha_384.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP320t1",
      "sha": "SHA-384",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p320t1_sha_384_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP320t1",
      "sha": "SHA-384",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p384t1_sha_384.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP384t1",
      "sha": "SHA-384",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p384t1_sha_384_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP384t1",
      "sha": "SHA-384",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p512t1_sha_512.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP512t1",
      "sha": "SHA-512",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_brainpool_p512t1_sha_512_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "brainpoolP512t1",
      "sha": "SHA-512",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["RFC 5639"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_prime239v1_sha_256.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "prime239v1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": [],
    "testStatus": {}
  },
  "ecdsa_rfc6979_prime239v1_sha_256_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "prime239v1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": [],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp224k1_sha_224.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224k1",
      "sha": "SHA-224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp224k1_sha_224_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp224k1",
      "sha": "SHA-224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp192k1_sha_224.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp192k1",
      "sha": "SHA-224",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_secp192k1_sha_224_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp192k1",
      "sha": "SHA-224",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_frp256v1_sha_256.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "frp256v1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["FRP256v1"],
    "testStatus": {}
  },
  "ecdsa_rfc6979_frp256v1_sha_256_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "frp256v1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": false,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["FRP256v1"],
    "testStatus": {}
  },
  "ecdsa_normalized_rfc6979_secp256r1_sha_256.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": true,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_normalized_rfc6979_secp256r1_sha_256_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256r1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": true,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_normalized_rfc6979_secp256k1_sha_256.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-256",
      "encoding": "DER",
      "normalize": true,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_normalized_rfc6979_secp256k1_sha_256_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-256",
      "encoding": "P1363",
      "normalize": true,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_normalized_rfc6979_secp256k1_sha_512.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-512",
      "encoding": "DER",
      "normalize": true,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_normalized_rfc6979_secp256k1_sha_512_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-512",
      "encoding": "P1363",
      "normalize": true,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_normalized_rfc6979_secp256k1_sha3_256.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA3-256",
      "encoding": "DER",
      "normalize": true,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_normalized_rfc6979_secp256k1_sha3_256_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA3-256",
      "encoding": "P1363",
      "normalize": true,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_normalized_rfc6979_secp256k1_sha_512_256.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-512/256",
      "encoding": "DER",
      "normalize": true,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ecdsa_normalized_rfc6979_secp256k1_sha_512_256_p1363.json": {
    "type": "EcdsaSign",
    "alg": {
      "algorithmType": "Ecdsa",
      "curve": "secp256k1",
      "sha": "SHA-512/256",
      "encoding": "P1363",
      "normalize": true,
      "signature_generation": "Rfc6979"
    },
    "folder": "ecdsa",
    "references": ["SEC2v1"],
    "testStatus": {}
  },
  "ed25519.json": {
    "type": "EddsaVerify",
    "alg": {
      "algorithmType": "Eddsa",
      "curve": "edwards25519",
      "cofactored": false,
      "encoding": "RAW"
    },
    "folder": "eddsa",
    "references": ["RFC 8032"],
    "testStatus": {
      "ed25519_dalek": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 42,
        "skipped": 0,
        "failed": 0
      },
      "elliptic": {
        "language": "javascript",
        "libVersion": "6.6.1",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 42,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 42,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ed25519_cofactored.json": {
    "type": "EddsaVerify",
    "alg": {
      "algorithmType": "Eddsa",
      "curve": "edwards25519",
      "cofactored": true,
      "encoding": "RAW"
    },
    "folder": "eddsa",
    "references": [
      "RFC 8032",
      "TIP-0014",
      "ZIP-0215"
    ],
    "testStatus": {}
  },
  "ed448.json": {
    "type": "EddsaVerify",
    "alg": {
      "algorithmType": "Eddsa",
      "curve": "edwards448",
      "cofactored": false,
      "encoding": "RAW"
    },
    "folder": "eddsa",
    "references": ["RFC 8032"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 38,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ed25519ph.json": {
    "type": "EddsaVerify",
    "alg": {
      "algorithmType": "Eddsa",
      "curve": "edwards25519",
      "cofactored": false,
      "encoding": "RAW"
    },
    "folder": "eddsa",
    "references": ["RFC 8032"],
    "testStatus": {}
  },
  "ed448ph.json": {
    "type": "EddsaVerify",
    "alg": {
      "algorithmType": "Eddsa",
      "curve": "edwards448",
      "cofactored": false,
      "encoding": "RAW"
    },
    "folder": "eddsa",
    "references": ["RFC 8032"],
    "testStatus": {}
  },
  "ed25519_blake2b.json": {
    "type": "EddsaVerify",
    "alg": {
      "algorithmType": "Eddsa",
      "curve": "edwards25519",
      "cofactored": false,
      "encoding": "RAW"
    },
    "folder": "eddsa",
    "references": ["RFC 8032"],
    "testStatus": {}
  },
  "ed25519_jwk.json": {
    "type": "EddsaVerify",
    "alg": {
      "algorithmType": "Eddsa",
      "curve": "edwards25519",
      "cofactored": false,
      "encoding": "JWK"
    },
    "folder": "eddsa",
    "references": ["RFC 8032"],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 42,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ed25519_sign.json": {
    "type": "EddsaSign",
    "alg": {
      "algorithmType": "Eddsa",
      "curve": "edwards25519",
      "cofactored": false,
      "encoding": "RAW"
    },
    "folder": "eddsa",
    "references": ["RFC 8032"],
    "testStatus": {
      "ed25519_dalek": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 82,
        "skipped": 0,
        "failed": 0
      },
      "elliptic": {
        "language": "javascript",
        "libVersion": "6.6.1",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 82,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 82,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ed448_sign.json": {
    "type": "EddsaSign",
    "alg": {
      "algorithmType": "Eddsa",
      "curve": "edwards448",
      "cofactored": false,
      "encoding": "RAW"
    },
    "folder": "eddsa",
    "references": ["RFC 8032"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 8,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ed25519ph_sign.json": {
    "type": "EddsaSign",
    "alg": {
      "algorithmType": "Eddsa",
      "curve": "edwards25519",
      "cofactored": false,
      "encoding": "RAW"
    },
    "folder": "eddsa",
    "references": ["RFC 8032"],
    "testStatus": {}
  },
  "ed448ph_sign.json": {
    "type": "EddsaSign",
    "alg": {
      "algorithmType": "Eddsa",
      "curve": "edwards448",
      "cofactored": false,
      "encoding": "RAW"
    },
    "folder": "eddsa",
    "references": ["RFC 8032"],
    "testStatus": {}
  },
  "ed25519_blake2b_sign.json": {
    "type": "EddsaSign",
    "alg": {
      "algorithmType": "Eddsa",
      "curve": "edwards25519",
      "cofactored": false,
      "encoding": "RAW"
    },
    "folder": "eddsa",
    "references": ["RFC 8032"],
    "testStatus": {}
  },
  "schnorr_secp256k1_sha_256_bip340.json": {
    "type": "SchnorrVerify",
    "alg": {
      "algorithmType": "Schnorr",
      "curve": "secp256k1",
      "sha": "SHA-256",
      "encoding": "BIP340",
      "normalize": true,
      "signature_generation": "Generic"
    },
    "folder": "schnorr",
    "references": ["BIP-340"],
    "testStatus": {}
  },
  "ecdh_raw_secp160r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "secp160r1",
      "encoding": "RAW"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {}
  },
  "ecdh_raw_secp192r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "secp192r1",
      "encoding": "RAW"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 269,
        "skipped": 2,
        "failed": 0
      }
    }
  },
  "ecdh_raw_secp224r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "secp224r1",
      "encoding": "RAW"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 287,
        "skipped": 2,
        "failed": 0
      }
    }
  },
  "ecdh_raw_secp256r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "secp256r1",
      "encoding": "RAW"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 241,
        "skipped": 2,
        "failed": 0
      }
    }
  },
  "ecdh_raw_secp384r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "secp384r1",
      "encoding": "RAW"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 273,
        "skipped": 2,
        "failed": 0
      }
    }
  },
  "ecdh_raw_secp521r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "secp521r1",
      "encoding": "RAW"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 264,
        "skipped": 2,
        "failed": 0
      }
    }
  },
  "ecdh_raw_secp256k1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "secp256k1",
      "encoding": "RAW"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 249,
        "skipped": 2,
        "failed": 0
      }
    }
  },
  "ecdh_raw_brainpool_p224r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "brainpoolP224r1",
      "encoding": "RAW"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {}
  },
  "ecdh_raw_brainpool_p256r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "brainpoolP256r1",
      "encoding": "RAW"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 214,
        "skipped": 2,
        "failed": 0
      }
    }
  },
  "ecdh_raw_brainpool_p256t1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "brainpoolP256t1",
      "encoding": "RAW"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {}
  },
  "ecdh_raw_brainpool_p384r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "brainpoolP384r1",
      "encoding": "RAW"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 224,
        "skipped": 2,
        "failed": 0
      }
    }
  },
  "ecdh_raw_brainpool_p384t1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "brainpoolP384t1",
      "encoding": "RAW"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {}
  },
  "ecdh_raw_brainpool_p512r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "brainpoolP512r1",
      "encoding": "RAW"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:13",
        "testVersion": "0.55",
        "passed": 212,
        "skipped": 2,
        "failed": 0
      }
    }
  },
  "ecdh_raw_brainpool_p512t1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "brainpoolP512t1",
      "encoding": "RAW"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {}
  },
  "ecdh_raw_starknet.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "starknet",
      "encoding": "RAW"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {}
  },
  "ecdh_raw_sm2.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "sm2",
      "encoding": "RAW"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {}
  },
  "ecdh_uncompressed_secp160r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "secp160r1",
      "encoding": "UNCOMPRESSED"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {}
  },
  "ecdh_uncompressed_secp192r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "secp192r1",
      "encoding": "UNCOMPRESSED"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {}
  },
  "ecdh_uncompressed_secp224r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "secp224r1",
      "encoding": "UNCOMPRESSED"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {
      "p224": {
        "language": "rust",
        "libVersion": "{version=\"0.13.2\", features=[\"ecdh\"]}",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 287,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdh_uncompressed_secp256r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "secp256r1",
      "encoding": "UNCOMPRESSED"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {
      "p256": {
        "language": "rust",
        "libVersion": "{ version = \"0.13.0\", features = [\"ecdh\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 241,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdh_uncompressed_secp384r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "secp384r1",
      "encoding": "UNCOMPRESSED"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {
      "p384": {
        "language": "rust",
        "libVersion": "{version=\"0.13.0\", features=[\"ecdh\"]}",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 273,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdh_uncompressed_secp521r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "secp521r1",
      "encoding": "UNCOMPRESSED"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {
      "p521": {
        "language": "rust",
        "libVersion": "{version=\"0.13.3\", features=[\"ecdh\"]}",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 264,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdh_uncompressed_secp256k1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "secp256k1",
      "encoding": "UNCOMPRESSED"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {
      "k256": {
        "language": "rust",
        "libVersion": "{version=\"0.13.3\", features=[\"ecdh\"]}",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 249,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdh_uncompressed_brainpool_p224r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "brainpoolP224r1",
      "encoding": "UNCOMPRESSED"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {}
  },
  "ecdh_uncompressed_brainpool_p256r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "brainpoolP256r1",
      "encoding": "UNCOMPRESSED"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {}
  },
  "ecdh_uncompressed_brainpool_p256t1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "brainpoolP256t1",
      "encoding": "UNCOMPRESSED"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {}
  },
  "ecdh_uncompressed_brainpool_p384r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "brainpoolP384r1",
      "encoding": "UNCOMPRESSED"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {}
  },
  "ecdh_uncompressed_brainpool_p384t1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "brainpoolP384t1",
      "encoding": "UNCOMPRESSED"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {}
  },
  "ecdh_uncompressed_brainpool_p512r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "brainpoolP512r1",
      "encoding": "UNCOMPRESSED"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {}
  },
  "ecdh_uncompressed_brainpool_p512t1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "brainpoolP512t1",
      "encoding": "UNCOMPRESSED"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {}
  },
  "ecdh_uncompressed_starknet.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "starknet",
      "encoding": "UNCOMPRESSED"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {}
  },
  "ecdh_uncompressed_sm2.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "sm2",
      "encoding": "UNCOMPRESSED"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {
      "sm2": {
        "language": "rust",
        "libVersion": "\"0.13.3\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 258,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdh_jwk_secp256r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "secp256r1",
      "encoding": "JWK"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 241,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdh_jwk_secp384r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "secp384r1",
      "encoding": "JWK"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 273,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ecdh_jwk_secp521r1.json": {
    "type": "Ecdh",
    "alg": {
      "algorithmType": "Ecdh",
      "primitive": "Ecdh",
      "curve": "secp521r1",
      "encoding": "JWK"
    },
    "folder": "ecdh",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 264,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "key_pair_secp160r1.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_secp160r1",
      "curve": "secp160r1"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {}
  },
  "key_pair_secp192r1.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_secp192r1",
      "curve": "secp192r1"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {
      "p192": {
        "language": "rust",
        "libVersion": "{version = \"0.13.0\", features = [\"ecdsa\", \"ecdsa-core\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 56,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "key_pair_secp224r1.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_secp224r1",
      "curve": "secp224r1"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {
      "p224": {
        "language": "rust",
        "libVersion": "{version=\"0.13.2\", features=[\"ecdh\"]}",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 56,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "key_pair_secp256r1.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_secp256r1",
      "curve": "secp256r1"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {
      "p256": {
        "language": "rust",
        "libVersion": "{ version = \"0.13.0\", features = [\"ecdh\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 56,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "key_pair_secp384r1.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_secp384r1",
      "curve": "secp384r1"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {
      "p384": {
        "language": "rust",
        "libVersion": "{version=\"0.13.0\", features=[\"ecdh\"]}",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 56,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "key_pair_secp521r1.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_secp521r1",
      "curve": "secp521r1"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {
      "p521": {
        "language": "rust",
        "libVersion": "{version=\"0.13.3\", features=[\"ecdh\"]}",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 56,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "key_pair_secp256k1.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_secp256k1",
      "curve": "secp256k1"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {
      "k256": {
        "language": "rust",
        "libVersion": "{version=\"0.13.3\", features=[\"ecdh\"]}",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 56,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "key_pair_brainpool_p224r1.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_brainpoolP224r1",
      "curve": "brainpoolP224r1"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {}
  },
  "key_pair_brainpool_p256r1.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_brainpoolP256r1",
      "curve": "brainpoolP256r1"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {}
  },
  "key_pair_brainpool_p256t1.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_brainpoolP256t1",
      "curve": "brainpoolP256t1"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {}
  },
  "key_pair_brainpool_p384r1.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_brainpoolP384r1",
      "curve": "brainpoolP384r1"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {}
  },
  "key_pair_brainpool_p384t1.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_brainpoolP384t1",
      "curve": "brainpoolP384t1"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {}
  },
  "key_pair_brainpool_p512r1.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_brainpoolP512r1",
      "curve": "brainpoolP512r1"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {}
  },
  "key_pair_brainpool_p512t1.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_brainpoolP512t1",
      "curve": "brainpoolP512t1"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {}
  },
  "key_pair_starknet.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_starknet",
      "curve": "starknet"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {}
  },
  "key_pair_sm2.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_sm2",
      "curve": "sm2"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {
      "sm2": {
        "language": "rust",
        "libVersion": "\"0.13.3\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 55,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "key_pair_bls12_377_g1.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_bls12_377_g1",
      "curve": "bls12_377_g1"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {}
  },
  "key_pair_bls12_381_g1.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_bls12_381_g1",
      "curve": "bls12_381_g1"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {}
  },
  "key_pair_bn462_g1.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_bn462_g1",
      "curve": "bn462_g1"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {}
  },
  "key_pair_bn254b_g1.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_bn254b_g1",
      "curve": "bn254b_g1"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {}
  },
  "key_pair_alt_bn128_g1.json": {
    "type": "KeyPair",
    "alg": {
      "algorithmType": "KeyPair",
      "primitive": "key_pair_alt_bn128_g1",
      "curve": "alt_bn128_g1"
    },
    "folder": "key_pair",
    "references": [],
    "testStatus": {
      "bn254": {
        "language": "rust",
        "libVersion": "\"0.0.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 27,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "point_mult_pfc_compressed_bls12_381_g1.json": {
    "type": "PointMult",
    "alg": {
      "algorithmType": "PointMult",
      "primitive": "PointMult",
      "curve": "bls12_381_g1",
      "encoding": "PFC_COMPRESSED"
    },
    "folder": "point_mult",
    "references": [],
    "testStatus": {
      "bls12_381": {
        "language": "rust",
        "libVersion": "\"0.8.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 176,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "point_mult_pfc_compressed_bls12_377_g1.json": {
    "type": "PointMult",
    "alg": {
      "algorithmType": "PointMult",
      "primitive": "PointMult",
      "curve": "bls12_377_g1",
      "encoding": "PFC_COMPRESSED"
    },
    "folder": "point_mult",
    "references": [],
    "testStatus": {}
  },
  "point_mult_pfc_compressed_alt_bn128_g1.json": {
    "type": "PointMult",
    "alg": {
      "algorithmType": "PointMult",
      "primitive": "PointMult",
      "curve": "alt_bn128_g1",
      "encoding": "PFC_COMPRESSED"
    },
    "folder": "point_mult",
    "references": [],
    "testStatus": {}
  },
  "point_mult_pfc_compressed_bn254b_g1.json": {
    "type": "PointMult",
    "alg": {
      "algorithmType": "PointMult",
      "primitive": "PointMult",
      "curve": "bn254b_g1",
      "encoding": "PFC_COMPRESSED"
    },
    "folder": "point_mult",
    "references": [],
    "testStatus": {}
  },
  "point_mult_pfc_compressed_bn462_g1.json": {
    "type": "PointMult",
    "alg": {
      "algorithmType": "PointMult",
      "primitive": "PointMult",
      "curve": "bn462_g1",
      "encoding": "PFC_COMPRESSED"
    },
    "folder": "point_mult",
    "references": [],
    "testStatus": {}
  },
  "point_mult_pfc_compressed_bls12_381_g2.json": {
    "type": "PointMult",
    "alg": {
      "algorithmType": "PointMult",
      "primitive": "PointMult",
      "curve": "bls12_381_g2",
      "encoding": "PFC_COMPRESSED"
    },
    "folder": "point_mult",
    "references": [],
    "testStatus": {
      "bls12_381": {
        "language": "rust",
        "libVersion": "\"0.8.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 893,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "point_mult_pfc_compressed_bls12_377_g2.json": {
    "type": "PointMult",
    "alg": {
      "algorithmType": "PointMult",
      "primitive": "PointMult",
      "curve": "bls12_377_g2",
      "encoding": "PFC_COMPRESSED"
    },
    "folder": "point_mult",
    "references": [],
    "testStatus": {}
  },
  "point_mult_pfc_compressed_alt_bn128_g2.json": {
    "type": "PointMult",
    "alg": {
      "algorithmType": "PointMult",
      "primitive": "PointMult",
      "curve": "alt_bn128_g2",
      "encoding": "PFC_COMPRESSED"
    },
    "folder": "point_mult",
    "references": [],
    "testStatus": {}
  },
  "point_mult_pfc_compressed_bn462_g2.json": {
    "type": "PointMult",
    "alg": {
      "algorithmType": "PointMult",
      "primitive": "PointMult",
      "curve": "bn462_g2",
      "encoding": "PFC_COMPRESSED"
    },
    "folder": "point_mult",
    "references": [],
    "testStatus": {}
  },
  "aes_kw_128.json": {
    "type": "KeyWrap",
    "alg": {
      "algorithmType": "KeyWrap",
      "primitive": "AesKw",
      "keySize": 128
    },
    "folder": "key_wrap",
    "references": ["RFC 3394"],
    "testStatus": {
      "aes_kw": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 33,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 33,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 13,
        "skipped": 20,
        "failed": 0
      }
    }
  },
  "aes_kw_192.json": {
    "type": "KeyWrap",
    "alg": {
      "algorithmType": "KeyWrap",
      "primitive": "AesKw",
      "keySize": 192
    },
    "folder": "key_wrap",
    "references": ["RFC 3394"],
    "testStatus": {
      "aes_kw": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 33,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 33,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 13,
        "skipped": 20,
        "failed": 0
      }
    }
  },
  "aes_kw_256.json": {
    "type": "KeyWrap",
    "alg": {
      "algorithmType": "KeyWrap",
      "primitive": "AesKw",
      "keySize": 256
    },
    "folder": "key_wrap",
    "references": ["RFC 3394"],
    "testStatus": {
      "aes_kw": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 33,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 33,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 13,
        "skipped": 20,
        "failed": 0
      }
    }
  },
  "aes_kwp_128.json": {
    "type": "KeyWrap",
    "alg": {
      "algorithmType": "KeyWrap",
      "primitive": "AesKwp",
      "keySize": 128
    },
    "folder": "key_wrap",
    "references": ["RFC 5649"],
    "testStatus": {
      "aes_kw": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 95,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 54,
        "skipped": 41,
        "failed": 0
      }
    }
  },
  "aes_kwp_192.json": {
    "type": "KeyWrap",
    "alg": {
      "algorithmType": "KeyWrap",
      "primitive": "AesKwp",
      "keySize": 192
    },
    "folder": "key_wrap",
    "references": ["RFC 5649"],
    "testStatus": {
      "aes_kw": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 95,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 54,
        "skipped": 41,
        "failed": 0
      }
    }
  },
  "aes_kwp_256.json": {
    "type": "KeyWrap",
    "alg": {
      "algorithmType": "KeyWrap",
      "primitive": "AesKwp",
      "keySize": 256
    },
    "folder": "key_wrap",
    "references": ["RFC 5649"],
    "testStatus": {
      "aes_kw": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 95,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 54,
        "skipped": 41,
        "failed": 0
      }
    }
  },
  "aria_kw_128.json": {
    "type": "KeyWrap",
    "alg": {
      "algorithmType": "KeyWrap",
      "primitive": "AriaKw",
      "keySize": 128
    },
    "folder": "key_wrap",
    "references": ["RFC 5794"],
    "testStatus": {
      "aes_kw": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 33,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_kw_192.json": {
    "type": "KeyWrap",
    "alg": {
      "algorithmType": "KeyWrap",
      "primitive": "AriaKw",
      "keySize": 192
    },
    "folder": "key_wrap",
    "references": ["RFC 5794"],
    "testStatus": {
      "aes_kw": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 33,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_kw_256.json": {
    "type": "KeyWrap",
    "alg": {
      "algorithmType": "KeyWrap",
      "primitive": "AriaKw",
      "keySize": 256
    },
    "folder": "key_wrap",
    "references": ["RFC 5794"],
    "testStatus": {
      "aes_kw": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 33,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_kwp_128.json": {
    "type": "KeyWrap",
    "alg": {
      "algorithmType": "KeyWrap",
      "primitive": "AriaKwp",
      "keySize": 128
    },
    "folder": "key_wrap",
    "references": [],
    "testStatus": {
      "aes_kw": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 95,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_kwp_192.json": {
    "type": "KeyWrap",
    "alg": {
      "algorithmType": "KeyWrap",
      "primitive": "AriaKwp",
      "keySize": 192
    },
    "folder": "key_wrap",
    "references": [],
    "testStatus": {
      "aes_kw": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 95,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_kwp_256.json": {
    "type": "KeyWrap",
    "alg": {
      "algorithmType": "KeyWrap",
      "primitive": "AriaKwp",
      "keySize": 256
    },
    "folder": "key_wrap",
    "references": [],
    "testStatus": {
      "aes_kw": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 95,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_kw_128.json": {
    "type": "KeyWrap",
    "alg": {
      "algorithmType": "KeyWrap",
      "primitive": "CamelliaKw",
      "keySize": 128
    },
    "folder": "key_wrap",
    "references": ["RFC 3657"],
    "testStatus": {
      "aes_kw": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 33,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_kw_192.json": {
    "type": "KeyWrap",
    "alg": {
      "algorithmType": "KeyWrap",
      "primitive": "CamelliaKw",
      "keySize": 192
    },
    "folder": "key_wrap",
    "references": ["RFC 3657"],
    "testStatus": {
      "aes_kw": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 33,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_kw_256.json": {
    "type": "KeyWrap",
    "alg": {
      "algorithmType": "KeyWrap",
      "primitive": "CamelliaKw",
      "keySize": 256
    },
    "folder": "key_wrap",
    "references": ["RFC 3657"],
    "testStatus": {
      "aes_kw": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 33,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "seed_kw_128.json": {
    "type": "KeyWrap",
    "alg": {
      "algorithmType": "KeyWrap",
      "primitive": "SeedKw",
      "keySize": 128
    },
    "folder": "key_wrap",
    "references": ["RFC 4010"],
    "testStatus": {
      "aes_kw": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 33,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_siv_cmac_kw_256.json": {
    "type": "KeyWrap",
    "alg": {
      "algorithmType": "KeyWrap",
      "primitive": "AesSivKw",
      "keySize": 256
    },
    "folder": "key_wrap",
    "references": ["RFC 5297"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 54,
        "skipped": 38,
        "failed": 0
      }
    }
  },
  "aes_siv_cmac_kw_384.json": {
    "type": "KeyWrap",
    "alg": {
      "algorithmType": "KeyWrap",
      "primitive": "AesSivKw",
      "keySize": 384
    },
    "folder": "key_wrap",
    "references": ["RFC 5297"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 54,
        "skipped": 38,
        "failed": 0
      }
    }
  },
  "aes_siv_cmac_kw_512.json": {
    "type": "KeyWrap",
    "alg": {
      "algorithmType": "KeyWrap",
      "primitive": "AesSivKw",
      "keySize": 512
    },
    "folder": "key_wrap",
    "references": ["RFC 5297"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 54,
        "skipped": 38,
        "failed": 0
      }
    }
  },
  "sha_1.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "sha-1",
      "digestSize": 160
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {
      "sha1": {
        "language": "rust",
        "libVersion": "\"0.10.6\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "sha_224.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "sha-224",
      "digestSize": 224
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {
      "sha2": {
        "language": "rust",
        "libVersion": "\"0.10.8\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "sha_256.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "sha-256",
      "digestSize": 256
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {
      "sha2": {
        "language": "rust",
        "libVersion": "\"0.10.8\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "sha_384.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "sha-384",
      "digestSize": 384
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {
      "sha2": {
        "language": "rust",
        "libVersion": "\"0.10.8\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "sha_512.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "sha-512",
      "digestSize": 512
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {
      "sha2": {
        "language": "rust",
        "libVersion": "\"0.10.8\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "sha_512_224.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "sha-512/224",
      "digestSize": 224
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {
      "sha2": {
        "language": "rust",
        "libVersion": "\"0.10.8\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "sha_512_256.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "sha-512/256",
      "digestSize": 256
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {
      "sha2": {
        "language": "rust",
        "libVersion": "\"0.10.8\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "sha3_224.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "sha3-224",
      "digestSize": 224
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {
      "keccak": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      },
      "sha3": {
        "language": "rust",
        "libVersion": "\"0.10.8\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "sha3_256.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "sha3-256",
      "digestSize": 256
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {
      "keccak": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      },
      "sha3": {
        "language": "rust",
        "libVersion": "\"0.10.8\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "sha3_384.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "sha3-384",
      "digestSize": 384
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {
      "keccak": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      },
      "sha3": {
        "language": "rust",
        "libVersion": "\"0.10.8\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "sha3_512.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "sha3-512",
      "digestSize": 512
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {
      "keccak": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      },
      "sha3": {
        "language": "rust",
        "libVersion": "\"0.10.8\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "sm3.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "sm3",
      "digestSize": 256
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {
      "sm3": {
        "language": "rust",
        "libVersion": "\"0.4.2\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "ripemd160.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "ripemd160",
      "digestSize": 160
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {
      "ripemd160": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "keccak224.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "keccak224",
      "digestSize": 224
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {
      "keccak": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      },
      "sha3": {
        "language": "rust",
        "libVersion": "\"0.10.8\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "keccak256.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "keccak256",
      "digestSize": 256
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {
      "keccak": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      },
      "sha3": {
        "language": "rust",
        "libVersion": "\"0.10.8\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "keccak384.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "keccak384",
      "digestSize": 384
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {
      "keccak": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      },
      "sha3": {
        "language": "rust",
        "libVersion": "\"0.10.8\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "keccak512.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "keccak512",
      "digestSize": 512
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {
      "keccak": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      },
      "sha3": {
        "language": "rust",
        "libVersion": "\"0.10.8\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "shake128_256.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "shake128",
      "digestSize": 256
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {}
  },
  "shake256_512.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "shake256",
      "digestSize": 512
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {}
  },
  "blake2b.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "blake2b",
      "digestSize": 512
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {
      "blake2": {
        "language": "rust",
        "libVersion": "\"0.10.6\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      },
      "blakejs": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "blake2s.json": {
    "type": "Hash",
    "alg": {
      "algorithmType": "MessageDigest",
      "primitive": "blake2s",
      "digestSize": 256
    },
    "folder": "message_digest",
    "references": [],
    "testStatus": {
      "blake2": {
        "language": "rust",
        "libVersion": "\"0.10.6\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      },
      "blakejs": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 72,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_cmac_128_128.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "AesCmac",
      "macSize": 128
    },
    "folder": "mac",
    "references": ["RFC 4493"],
    "testStatus": {
      "cmac": {
        "language": "rust",
        "libVersion": "\"0.7.2\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 34,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 34,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_cmac_192_128.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "AesCmac",
      "macSize": 128
    },
    "folder": "mac",
    "references": ["RFC 4493"],
    "testStatus": {
      "cmac": {
        "language": "rust",
        "libVersion": "\"0.7.2\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 34,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 34,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_cmac_256_128.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "AesCmac",
      "macSize": 128
    },
    "folder": "mac",
    "references": ["RFC 4493"],
    "testStatus": {
      "cmac": {
        "language": "rust",
        "libVersion": "\"0.7.2\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 34,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 34,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_cmac_128_96.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "AesCmac",
      "macSize": 96
    },
    "folder": "mac",
    "references": [
      "RFC 4494",
      "RFC 4493"
    ],
    "testStatus": {}
  },
  "aes_cmac_192_96.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "AesCmac",
      "macSize": 96
    },
    "folder": "mac",
    "references": ["RFC 4493"],
    "testStatus": {}
  },
  "aes_cmac_256_96.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "AesCmac",
      "macSize": 96
    },
    "folder": "mac",
    "references": ["RFC 4493"],
    "testStatus": {}
  },
  "aria_cmac_128_128.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "AriaCmac",
      "macSize": 128
    },
    "folder": "mac",
    "references": ["RFC 5794"],
    "testStatus": {
      "cmac": {
        "language": "rust",
        "libVersion": "\"0.7.2\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 34,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_cmac_192_128.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "AriaCmac",
      "macSize": 128
    },
    "folder": "mac",
    "references": ["RFC 5794"],
    "testStatus": {
      "cmac": {
        "language": "rust",
        "libVersion": "\"0.7.2\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 34,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aria_cmac_256_128.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "AriaCmac",
      "macSize": 128
    },
    "folder": "mac",
    "references": ["RFC 5794"],
    "testStatus": {
      "cmac": {
        "language": "rust",
        "libVersion": "\"0.7.2\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 34,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_cmac_128_128.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "CamelliaCmac",
      "macSize": 128
    },
    "folder": "mac",
    "references": ["RFC 6803"],
    "testStatus": {
      "cmac": {
        "language": "rust",
        "libVersion": "\"0.7.2\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 34,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 34,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_cmac_192_128.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "CamelliaCmac",
      "macSize": 128
    },
    "folder": "mac",
    "references": ["RFC 6803"],
    "testStatus": {
      "cmac": {
        "language": "rust",
        "libVersion": "\"0.7.2\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 34,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 34,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "camellia_cmac_256_128.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "CamelliaCmac",
      "macSize": 128
    },
    "folder": "mac",
    "references": ["RFC 6803"],
    "testStatus": {
      "cmac": {
        "language": "rust",
        "libVersion": "\"0.7.2\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 34,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 34,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_cmac_prf128_160_128.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "AesCmacPrf128",
      "macSize": 128
    },
    "folder": "mac",
    "references": ["RFC 4615"],
    "testStatus": {}
  },
  "aes_pmac_128_128.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "AesPmac",
      "macSize": 128
    },
    "folder": "mac",
    "references": ["A Block-Cipher Mode of Operation for Parallelizable Message Authentication"],
    "testStatus": {
      "pmac": {
        "language": "rust",
        "libVersion": "\"0.7.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 34,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_pmac_192_128.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "AesPmac",
      "macSize": 128
    },
    "folder": "mac",
    "references": ["A Block-Cipher Mode of Operation for Parallelizable Message Authentication"],
    "testStatus": {
      "pmac": {
        "language": "rust",
        "libVersion": "\"0.7.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 34,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_pmac_256_128.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "AesPmac",
      "macSize": 128
    },
    "folder": "mac",
    "references": ["A Block-Cipher Mode of Operation for Parallelizable Message Authentication"],
    "testStatus": {
      "pmac": {
        "language": "rust",
        "libVersion": "\"0.7.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 34,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_xcbc_mac_128_128.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "AesXcbcMac",
      "macSize": 128
    },
    "folder": "mac",
    "references": ["RFC 3566"],
    "testStatus": {}
  },
  "aes_xcbc_mac_128_96.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "AesXcbcMac",
      "macSize": 96
    },
    "folder": "mac",
    "references": ["RFC 3566"],
    "testStatus": {}
  },
  "aria_xcbc_mac_128_128.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "AriaXcbcMac",
      "macSize": 128
    },
    "folder": "mac",
    "references": ["draft-nsri-ipsecme-aria-ipsec-00"],
    "testStatus": {}
  },
  "aria_xcbc_mac_128_96.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "AriaXcbcMac",
      "macSize": 96
    },
    "folder": "mac",
    "references": ["draft-nsri-ipsecme-aria-ipsec-00"],
    "testStatus": {}
  },
  "camellia_xcbc_mac_128_128.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "CamelliaXcbcMac",
      "macSize": 128
    },
    "folder": "mac",
    "references": ["draft-kanno-ipsecme-camellia-xcbc-01"],
    "testStatus": {}
  },
  "camellia_xcbc_mac_128_96.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "CamelliaXcbcMac",
      "macSize": 96
    },
    "folder": "mac",
    "references": ["draft-kanno-ipsecme-camellia-xcbc-01"],
    "testStatus": {}
  },
  "hmac_sha1_160.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "HmacSha1",
      "macSize": 160
    },
    "folder": "mac",
    "references": ["RFC 2104"],
    "testStatus": {
      "hmac": {
        "language": "rust",
        "libVersion": "\"0.12.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 46,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 46,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "hmac_sha224_224.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "HmacSha224",
      "macSize": 224
    },
    "folder": "mac",
    "references": ["RFC 2104"],
    "testStatus": {
      "hmac": {
        "language": "rust",
        "libVersion": "\"0.12.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 47,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 47,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "hmac_sha256_256.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "HmacSha256",
      "macSize": 256
    },
    "folder": "mac",
    "references": ["RFC 2104"],
    "testStatus": {
      "hmac": {
        "language": "rust",
        "libVersion": "\"0.12.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 46,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 46,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "hmac_sha384_384.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "HmacSha384",
      "macSize": 384
    },
    "folder": "mac",
    "references": ["RFC 2104"],
    "testStatus": {
      "hmac": {
        "language": "rust",
        "libVersion": "\"0.12.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 47,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 47,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "hmac_sha512_512.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "HmacSha512",
      "macSize": 512
    },
    "folder": "mac",
    "references": ["RFC 2104"],
    "testStatus": {
      "hmac": {
        "language": "rust",
        "libVersion": "\"0.12.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 47,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 47,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "hmac_sha3_224_224.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "HmacSha3_224",
      "macSize": 224
    },
    "folder": "mac",
    "references": [
      "RFC 2104",
      "FIPS PUB 202: SHA-3 Standard: Permutation-Based Hash andExtendable-Output Functions"
    ],
    "testStatus": {
      "hmac": {
        "language": "rust",
        "libVersion": "\"0.12.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 47,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 47,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "hmac_sha3_256_256.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "HmacSha3_256",
      "macSize": 256
    },
    "folder": "mac",
    "references": [
      "RFC 2104",
      "FIPS PUB 202: SHA-3 Standard: Permutation-Based Hash andExtendable-Output Functions"
    ],
    "testStatus": {
      "hmac": {
        "language": "rust",
        "libVersion": "\"0.12.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 46,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 46,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "hmac_sha3_384_384.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "HmacSha3_384",
      "macSize": 384
    },
    "folder": "mac",
    "references": [
      "RFC 2104",
      "FIPS PUB 202: SHA-3 Standard: Permutation-Based Hash andExtendable-Output Functions"
    ],
    "testStatus": {
      "hmac": {
        "language": "rust",
        "libVersion": "\"0.12.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 47,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 47,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "hmac_sha3_512_512.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "HmacSha3_512",
      "macSize": 512
    },
    "folder": "mac",
    "references": [
      "RFC 2104",
      "FIPS PUB 202: SHA-3 Standard: Permutation-Based Hash andExtendable-Output Functions"
    ],
    "testStatus": {
      "hmac": {
        "language": "rust",
        "libVersion": "\"0.12.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 47,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 47,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "sip_hash_2_4.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "SipHash24",
      "macSize": 64
    },
    "folder": "mac",
    "references": ["RFC 9018"],
    "testStatus": {}
  },
  "sip_hash_4_8.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "SipHash48",
      "macSize": 64
    },
    "folder": "mac",
    "references": [],
    "testStatus": {}
  },
  "ascon_mac.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "AsconMac",
      "macSize": 128
    },
    "folder": "mac",
    "references": [],
    "testStatus": {}
  },
  "ascon_maca.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "AsconMaca",
      "macSize": 128
    },
    "folder": "mac",
    "references": [],
    "testStatus": {}
  },
  "kmac128.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "Kmac128",
      "keySize": 128,
      "macSize": 128,
      "customization": ""
    },
    "folder": "mac",
    "references": ["NIST SP 800-185"],
    "testStatus": {}
  },
  "kmac128_customized.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "Kmac128",
      "keySize": 128,
      "macSize": 128,
      "customization": "4d794170706c69636174696f6e"
    },
    "folder": "mac",
    "references": ["NIST SP 800-185"],
    "testStatus": {}
  },
  "kmac256.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "Kmac256",
      "keySize": 256,
      "macSize": 256,
      "customization": ""
    },
    "folder": "mac",
    "references": ["NIST SP 800-185"],
    "testStatus": {}
  },
  "kmac256_customized.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "Kmac256",
      "keySize": 256,
      "macSize": 256,
      "customization": "4d794170706c69636174696f6e"
    },
    "folder": "mac",
    "references": ["NIST SP 800-185"],
    "testStatus": {}
  },
  "hop_mac.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "HopMac",
      "keySize": 128,
      "macSize": 128,
      "customization": ""
    },
    "folder": "mac",
    "references": ["draft-irtf-cfrg-kangarootwelve"],
    "testStatus": {}
  },
  "hop_mac_customized.json": {
    "type": "Mac",
    "alg": {
      "algorithmType": "Mac",
      "primitive": "HopMac",
      "keySize": 128,
      "macSize": 128,
      "customization": "4d794170706c69636174696f6e"
    },
    "folder": "mac",
    "references": ["draft-irtf-cfrg-kangarootwelve"],
    "testStatus": {}
  },
  "ascon_prf.json": {
    "type": "Prf",
    "alg": {
      "algorithmType": "Prf",
      "primitive": "AsconPrf",
      "keySize": 128
    },
    "folder": "prf",
    "references": [],
    "testStatus": {}
  },
  "ascon_prfa.json": {
    "type": "Prf",
    "alg": {
      "algorithmType": "Prf",
      "primitive": "AsconPrfa",
      "keySize": 128
    },
    "folder": "prf",
    "references": [],
    "testStatus": {}
  },
  "shake128.json": {
    "type": "Xof",
    "alg": {
      "algorithmType": "Xof",
      "primitive": "Shake128"
    },
    "folder": "xof",
    "references": ["NIST SP 800-185"],
    "testStatus": {}
  },
  "shake256.json": {
    "type": "Xof",
    "alg": {
      "algorithmType": "Xof",
      "primitive": "Shake256"
    },
    "folder": "xof",
    "references": ["NIST SP 800-185"],
    "testStatus": {}
  },
  "raw_shake128.json": {
    "type": "Xof",
    "alg": {
      "algorithmType": "Xof",
      "primitive": "RawShake128"
    },
    "folder": "xof",
    "references": ["NIST SP 800-185"],
    "testStatus": {}
  },
  "raw_shake256.json": {
    "type": "Xof",
    "alg": {
      "algorithmType": "Xof",
      "primitive": "RawShake256"
    },
    "folder": "xof",
    "references": ["NIST SP 800-185"],
    "testStatus": {}
  },
  "ascon_xof.json": {
    "type": "Xof",
    "alg": {
      "algorithmType": "Xof",
      "primitive": "AsconXof"
    },
    "folder": "xof",
    "references": [],
    "testStatus": {}
  },
  "ascon_xofa.json": {
    "type": "Xof",
    "alg": {
      "algorithmType": "Xof",
      "primitive": "AsconXofa"
    },
    "folder": "xof",
    "references": [],
    "testStatus": {}
  },
  "pbkdf2_hmac_sha1.json": {
    "type": "Pbkdf",
    "alg": {
      "algorithmType": "Pbkdf",
      "primitive": "Pbkdf",
      "sha": "SHA-1"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 10,
        "skipped": 1,
        "failed": 0
      }
    }
  },
  "pbkdf2_hmac_sha224.json": {
    "type": "Pbkdf",
    "alg": {
      "algorithmType": "Pbkdf",
      "primitive": "Pbkdf",
      "sha": "SHA-224"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 10,
        "skipped": 1,
        "failed": 0
      }
    }
  },
  "pbkdf2_hmac_sha256.json": {
    "type": "Pbkdf",
    "alg": {
      "algorithmType": "Pbkdf",
      "primitive": "Pbkdf",
      "sha": "SHA-256"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 10,
        "skipped": 1,
        "failed": 0
      }
    }
  },
  "pbkdf2_hmac_sha384.json": {
    "type": "Pbkdf",
    "alg": {
      "algorithmType": "Pbkdf",
      "primitive": "Pbkdf",
      "sha": "SHA-384"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 10,
        "skipped": 1,
        "failed": 0
      }
    }
  },
  "pbkdf2_hmac_sha512.json": {
    "type": "Pbkdf",
    "alg": {
      "algorithmType": "Pbkdf",
      "primitive": "Pbkdf",
      "sha": "SHA-512"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 10,
        "skipped": 1,
        "failed": 0
      }
    }
  },
  "pbkdf2_hmac_sha512_224.json": {
    "type": "Pbkdf",
    "alg": {
      "algorithmType": "Pbkdf",
      "primitive": "Pbkdf",
      "sha": "SHA-512/224"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 10,
        "skipped": 1,
        "failed": 0
      }
    }
  },
  "pbkdf2_hmac_sha512_256.json": {
    "type": "Pbkdf",
    "alg": {
      "algorithmType": "Pbkdf",
      "primitive": "Pbkdf",
      "sha": "SHA-512/256"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:14",
        "testVersion": "0.55",
        "passed": 10,
        "skipped": 1,
        "failed": 0
      }
    }
  },
  "pbkdf2_hmac_sha3_224.json": {
    "type": "Pbkdf",
    "alg": {
      "algorithmType": "Pbkdf",
      "primitive": "Pbkdf",
      "sha": "SHA3-224"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 10,
        "skipped": 1,
        "failed": 0
      }
    }
  },
  "pbkdf2_hmac_sha3_256.json": {
    "type": "Pbkdf",
    "alg": {
      "algorithmType": "Pbkdf",
      "primitive": "Pbkdf",
      "sha": "SHA3-256"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 10,
        "skipped": 1,
        "failed": 0
      }
    }
  },
  "pbkdf2_hmac_sha3_384.json": {
    "type": "Pbkdf",
    "alg": {
      "algorithmType": "Pbkdf",
      "primitive": "Pbkdf",
      "sha": "SHA3-384"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 10,
        "skipped": 1,
        "failed": 0
      }
    }
  },
  "pbkdf2_hmac_sha3_512.json": {
    "type": "Pbkdf",
    "alg": {
      "algorithmType": "Pbkdf",
      "primitive": "Pbkdf",
      "sha": "SHA3-512"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 10,
        "skipped": 1,
        "failed": 0
      }
    }
  },
  "pbes2_hmac_sha_1_aes_128.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-1",
      "cipher": "Aes",
      "keySize": 16
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "pbes2_hmac_sha_1_aes_192.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-1",
      "cipher": "Aes",
      "keySize": 24
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "pbes2_hmac_sha_1_aes_256.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-1",
      "cipher": "Aes",
      "keySize": 32
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "pbes2_hmac_sha_224_aes_128.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-224",
      "cipher": "Aes",
      "keySize": 16
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "pbes2_hmac_sha_224_aes_192.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-224",
      "cipher": "Aes",
      "keySize": 24
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "pbes2_hmac_sha_224_aes_256.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-224",
      "cipher": "Aes",
      "keySize": 32
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "pbes2_hmac_sha_256_aes_128.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-256",
      "cipher": "Aes",
      "keySize": 16
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "pbes2_hmac_sha_256_aes_192.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-256",
      "cipher": "Aes",
      "keySize": 24
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "pbes2_hmac_sha_256_aes_256.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-256",
      "cipher": "Aes",
      "keySize": 32
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "pbes2_hmac_sha_384_aes_128.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-384",
      "cipher": "Aes",
      "keySize": 16
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "pbes2_hmac_sha_384_aes_192.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-384",
      "cipher": "Aes",
      "keySize": 24
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "pbes2_hmac_sha_384_aes_256.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-384",
      "cipher": "Aes",
      "keySize": 32
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "pbes2_hmac_sha_512_aes_128.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-512",
      "cipher": "Aes",
      "keySize": 16
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "pbes2_hmac_sha_512_aes_192.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-512",
      "cipher": "Aes",
      "keySize": 24
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "pbes2_hmac_sha_512_aes_256.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-512",
      "cipher": "Aes",
      "keySize": 32
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "pbes2_hmac_sha_512_224_aes_128.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-512/224",
      "cipher": "Aes",
      "keySize": 16
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "pbes2_hmac_sha_512_224_aes_192.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-512/224",
      "cipher": "Aes",
      "keySize": 24
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "pbes2_hmac_sha_512_224_aes_256.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-512/224",
      "cipher": "Aes",
      "keySize": 32
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "pbes2_hmac_sha_512_256_aes_128.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-512/256",
      "cipher": "Aes",
      "keySize": 16
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "pbes2_hmac_sha_512_256_aes_192.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-512/256",
      "cipher": "Aes",
      "keySize": 24
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "pbes2_hmac_sha_512_256_aes_256.json": {
    "type": "Pbes2",
    "alg": {
      "algorithmType": "Pbes2",
      "primitive": "Pbes2",
      "sha": "SHA-512/256",
      "cipher": "Aes",
      "keySize": 32
    },
    "folder": "pbes",
    "references": ["RFC 8018"],
    "testStatus": {}
  },
  "scrypt.json": {
    "type": "Scrypt",
    "alg": {
      "algorithmType": "Scrypt",
      "primitive": "Pbkdf"
    },
    "folder": "kdf",
    "references": ["RFC 7914"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 14,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "hkdf_sha1.json": {
    "type": "Hkdf",
    "alg": {
      "algorithmType": "Hkdf",
      "primitive": "HkdfSha1",
      "sha": "SHA-1"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 48,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "hkdf_sha224.json": {
    "type": "Hkdf",
    "alg": {
      "algorithmType": "Hkdf",
      "primitive": "HkdfSha224",
      "sha": "SHA-224"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 48,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "hkdf_sha256.json": {
    "type": "Hkdf",
    "alg": {
      "algorithmType": "Hkdf",
      "primitive": "HkdfSha256",
      "sha": "SHA-256"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 48,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "hkdf_sha384.json": {
    "type": "Hkdf",
    "alg": {
      "algorithmType": "Hkdf",
      "primitive": "HkdfSha384",
      "sha": "SHA-384"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 48,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "hkdf_sha512.json": {
    "type": "Hkdf",
    "alg": {
      "algorithmType": "Hkdf",
      "primitive": "HkdfSha512",
      "sha": "SHA-512"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 48,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "hkdf_sha512_224.json": {
    "type": "Hkdf",
    "alg": {
      "algorithmType": "Hkdf",
      "primitive": "HkdfSha512_224",
      "sha": "SHA-512/224"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 48,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "hkdf_sha512_256.json": {
    "type": "Hkdf",
    "alg": {
      "algorithmType": "Hkdf",
      "primitive": "HkdfSha512_256",
      "sha": "SHA-512/256"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 48,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "hkdf_sha3_224.json": {
    "type": "Hkdf",
    "alg": {
      "algorithmType": "Hkdf",
      "primitive": "HkdfSha3_224",
      "sha": "SHA3-224"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 48,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "hkdf_sha3_256.json": {
    "type": "Hkdf",
    "alg": {
      "algorithmType": "Hkdf",
      "primitive": "HkdfSha3_256",
      "sha": "SHA3-256"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 48,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "hkdf_sha3_384.json": {
    "type": "Hkdf",
    "alg": {
      "algorithmType": "Hkdf",
      "primitive": "HkdfSha3_384",
      "sha": "SHA3-384"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 48,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "hkdf_sha3_512.json": {
    "type": "Hkdf",
    "alg": {
      "algorithmType": "Hkdf",
      "primitive": "HkdfSha3_512",
      "sha": "SHA3-512"
    },
    "folder": "kdf",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 48,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_base2.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 2,
      "alphabet": "01",
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 455,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_base2.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 2,
      "alphabet": "01",
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 455,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_base2.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 2,
      "alphabet": "01",
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 455,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_base3.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 3,
      "alphabet": "012",
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 507,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_base3.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 3,
      "alphabet": "012",
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 507,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_base3.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 3,
      "alphabet": "012",
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 507,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_base4.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 4,
      "alphabet": "0123",
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 472,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_base4.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 4,
      "alphabet": "0123",
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 472,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_base4.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 4,
      "alphabet": "0123",
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 472,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_base5.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 5,
      "alphabet": "01234",
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 473,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_base5.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 5,
      "alphabet": "01234",
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 473,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_base5.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 5,
      "alphabet": "01234",
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 473,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_base8.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 8,
      "alphabet": "01234567",
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 465,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_base8.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 8,
      "alphabet": "01234567",
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 465,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_base8.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 8,
      "alphabet": "01234567",
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 465,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_base10.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 10,
      "alphabet": "0123456789",
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 466,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_base10.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 10,
      "alphabet": "0123456789",
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 466,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_base10.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 10,
      "alphabet": "0123456789",
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 466,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_base16.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 16,
      "alphabet": "0123456789abcdef",
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 467,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_base16.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 16,
      "alphabet": "0123456789abcdef",
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 467,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_base16.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 16,
      "alphabet": "0123456789abcdef",
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 467,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_base26.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 26,
      "alphabet": "abcdefghijklmnopqrstuvwxyz",
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 447,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_base26.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 26,
      "alphabet": "abcdefghijklmnopqrstuvwxyz",
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 447,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_base26.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 26,
      "alphabet": "abcdefghijklmnopqrstuvwxyz",
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 447,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_base32.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 32,
      "alphabet": "ABCDEFGHIJKLMNOPQRSTUVWXZY234567",
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_base32.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 32,
      "alphabet": "ABCDEFGHIJKLMNOPQRSTUVWXZY234567",
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_base32.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 32,
      "alphabet": "ABCDEFGHIJKLMNOPQRSTUVWXZY234567",
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_base36.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 36,
      "alphabet": "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_base36.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 36,
      "alphabet": "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_base36.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 36,
      "alphabet": "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_base58.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 58,
      "alphabet": "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_base58.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 58,
      "alphabet": "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_base58.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 58,
      "alphabet": "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_base62.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 62,
      "alphabet": "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_base62.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 62,
      "alphabet": "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_base62.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 62,
      "alphabet": "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_base64.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 64,
      "alphabet": "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+/",
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_base64.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 64,
      "alphabet": "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+/",
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_base64.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 64,
      "alphabet": "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+/",
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_base85.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 85,
      "alphabet": "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!#$%&()*+-;<=>?@^_`{|}~",
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_base85.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 85,
      "alphabet": "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!#$%&()*+-;<=>?@^_`{|}~",
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_base85.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeBase",
      "primitive": "AesFf1",
      "radix": 85,
      "alphabet": "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!#$%&()*+-;<=>?@^_`{|}~",
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix2.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 2,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 455,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix2.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 2,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 455,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix2.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 2,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 455,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix3.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 3,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 507,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix3.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 3,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 507,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix3.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 3,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 507,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix4.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 4,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 472,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix4.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 4,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 472,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix4.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 4,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 472,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix5.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 5,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 473,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix5.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 5,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 473,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix5.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 5,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 473,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix8.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 8,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 465,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix8.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 8,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 465,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix8.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 8,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 465,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix10.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 10,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 466,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix10.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 10,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 466,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix10.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 10,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 466,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix16.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 16,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 467,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix16.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 16,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 467,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix16.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 16,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 467,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix26.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 26,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 447,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix26.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 26,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 447,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix26.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 26,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 447,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix32.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 32,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix32.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 32,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix32.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 32,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix36.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 36,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix36.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 36,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix36.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 36,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix58.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 58,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix58.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 58,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix58.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 58,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix62.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 62,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix62.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 62,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix62.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 62,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix64.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 64,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix64.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 64,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix64.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 64,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix85.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 85,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix85.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 85,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix85.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 85,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 448,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix127.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 127,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 449,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix127.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 127,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 449,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix127.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 127,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 449,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix128.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 128,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 449,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix128.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 128,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 449,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix128.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 128,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 449,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix255.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 255,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 449,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix255.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 255,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 449,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix255.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 255,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 449,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix256.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 256,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 449,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix256.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 256,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 449,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix256.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 256,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 449,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix257.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 257,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 449,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix257.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 257,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 449,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix257.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 257,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 449,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix1000.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 1000,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 450,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix1000.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 1000,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 450,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix1000.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 1000,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 450,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix65535.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 65535,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 440,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix65535.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 65535,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 440,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix65535.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 65535,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 440,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_128_radix65536.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 65536,
      "keySize": 128
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 440,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_192_radix65536.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 65536,
      "keySize": 192
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 440,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "aes_ff1_256_radix65536.json": {
    "type": "Fpe",
    "alg": {
      "algorithmType": "FpeRadix",
      "primitive": "AesFf1",
      "radix": 65536,
      "keySize": 256
    },
    "folder": "fpe",
    "references": [],
    "testStatus": {
      "fpe": {
        "language": "rust",
        "libVersion": "\"0.6.1\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 440,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_1024_sha_1.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 1024,
      "sha": "SHA-1",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 408,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 408,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 408,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_1024_sha_224.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 1024,
      "sha": "SHA-224",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 242,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 242,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 242,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_1024_sha_256.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 1024,
      "sha": "SHA-256",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 394,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 338,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 394,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 394,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_1024_sha_384.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 1024,
      "sha": "SHA-384",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 300,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 300,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 300,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 300,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_1024_sha_512.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 1024,
      "sha": "SHA-512",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 576,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 315,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 576,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 576,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_1024_sha3_256.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 1024,
      "sha": "SHA3-256",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 396,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 413,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_1024_sha3_384.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 1024,
      "sha": "SHA3-384",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 402,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 402,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_1024_sha3_512.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 1024,
      "sha": "SHA3-512",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 328,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 456,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_2048_sha_1.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 2048,
      "sha": "SHA-1",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 411,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 411,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 411,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_2048_sha_224.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 2048,
      "sha": "SHA-224",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 245,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 245,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 245,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_2048_sha_256.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 2048,
      "sha": "SHA-256",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 397,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 341,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 397,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 397,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_2048_sha_384.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 2048,
      "sha": "SHA-384",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 303,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 303,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 303,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 303,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_2048_sha_512.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 2048,
      "sha": "SHA-512",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 580,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 319,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 580,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 580,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_2048_sha3_256.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 2048,
      "sha": "SHA3-256",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 399,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 416,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_2048_sha3_384.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 2048,
      "sha": "SHA3-384",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 405,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 405,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_2048_sha3_512.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 2048,
      "sha": "SHA3-512",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 332,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 460,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_3072_sha_1.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 3072,
      "sha": "SHA-1",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 409,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 409,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 409,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_3072_sha_224.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 3072,
      "sha": "SHA-224",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 243,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 243,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 243,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_3072_sha_256.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 3072,
      "sha": "SHA-256",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 395,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 339,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 395,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 395,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_3072_sha_384.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 3072,
      "sha": "SHA-384",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 301,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 301,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 301,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 301,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_3072_sha_512.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 3072,
      "sha": "SHA-512",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 578,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 317,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 578,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 578,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_3072_sha3_256.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 3072,
      "sha": "SHA3-256",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 397,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 414,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_3072_sha3_384.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 3072,
      "sha": "SHA3-384",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 403,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 403,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_3072_sha3_512.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 3072,
      "sha": "SHA3-512",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 330,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 458,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_4096_sha_1.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 4096,
      "sha": "SHA-1",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 409,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 409,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 409,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_4096_sha_224.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 4096,
      "sha": "SHA-224",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 243,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 243,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 243,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_4096_sha_256.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 4096,
      "sha": "SHA-256",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 395,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 339,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 395,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 395,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_4096_sha_384.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 4096,
      "sha": "SHA-384",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 301,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 301,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 301,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 301,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_4096_sha_512.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 4096,
      "sha": "SHA-512",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 578,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 317,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 578,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 578,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_4096_sha3_256.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 4096,
      "sha": "SHA3-256",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 397,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 414,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_4096_sha3_384.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 4096,
      "sha": "SHA3-384",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 403,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 403,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_4096_sha3_512.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 4096,
      "sha": "SHA3-512",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 330,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 458,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_1536_sha_1.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 1536,
      "sha": "SHA-1",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 409,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 409,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 409,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pkcs1_1536_sha_256.json": {
    "type": "RsaPkcs1Verify",
    "alg": {
      "algorithmType": "RsaSsaPkcs1",
      "primitive": "RsaSsaPkcs1",
      "size": 1536,
      "sha": "SHA-256",
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 395,
        "skipped": 0,
        "failed": 0
      },
      "node.js": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-10-27 12:58",
        "testVersion": "0.52",
        "passed": 339,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 395,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 395,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_2048_sha_1_mgf1_sha_1_20.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 2048,
      "sha": "SHA-1",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1",
      "salt_len": 20,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 268,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 268,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_2048_sha_224_mgf1_sha_224_28.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 2048,
      "sha": "SHA-224",
      "mgf": "MGF1",
      "mgf_sha": "SHA-224",
      "salt_len": 28,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 101,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_2048_sha_256_mgf1_sha_256_32.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 2048,
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256",
      "salt_len": 32,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 253,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 253,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_2048_sha_384_mgf1_sha_384_48.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 2048,
      "sha": "SHA-384",
      "mgf": "MGF1",
      "mgf_sha": "SHA-384",
      "salt_len": 48,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 159,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 159,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_2048_sha_512_mgf1_sha_512_64.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 2048,
      "sha": "SHA-512",
      "mgf": "MGF1",
      "mgf_sha": "SHA-512",
      "salt_len": 64,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 435,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 435,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_3072_sha_1_mgf1_sha_1_20.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 3072,
      "sha": "SHA-1",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1",
      "salt_len": 20,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 265,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 265,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_3072_sha_224_mgf1_sha_224_28.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 3072,
      "sha": "SHA-224",
      "mgf": "MGF1",
      "mgf_sha": "SHA-224",
      "salt_len": 28,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 100,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_3072_sha_256_mgf1_sha_256_32.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 3072,
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256",
      "salt_len": 32,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 252,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 252,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_3072_sha_384_mgf1_sha_384_48.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 3072,
      "sha": "SHA-384",
      "mgf": "MGF1",
      "mgf_sha": "SHA-384",
      "salt_len": 48,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 156,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 156,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_3072_sha_512_mgf1_sha_512_64.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 3072,
      "sha": "SHA-512",
      "mgf": "MGF1",
      "mgf_sha": "SHA-512",
      "salt_len": 64,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 434,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 434,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_4096_sha_1_mgf1_sha_1_20.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 4096,
      "sha": "SHA-1",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1",
      "salt_len": 20,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 265,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 265,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_4096_sha_224_mgf1_sha_224_28.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 4096,
      "sha": "SHA-224",
      "mgf": "MGF1",
      "mgf_sha": "SHA-224",
      "salt_len": 28,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 99,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_4096_sha_256_mgf1_sha_256_32.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 4096,
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256",
      "salt_len": 32,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 252,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 252,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_4096_sha_384_mgf1_sha_384_48.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 4096,
      "sha": "SHA-384",
      "mgf": "MGF1",
      "mgf_sha": "SHA-384",
      "salt_len": 48,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 156,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 156,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_4096_sha_512_mgf1_sha_512_64.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 4096,
      "sha": "SHA-512",
      "mgf": "MGF1",
      "mgf_sha": "SHA-512",
      "salt_len": 64,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 433,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 433,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_2048_sha_224_mgf1_sha_224_0.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 2048,
      "sha": "SHA-224",
      "mgf": "MGF1",
      "mgf_sha": "SHA-224",
      "salt_len": 0,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 102,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_2048_sha_256_mgf1_sha_256_0.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 2048,
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256",
      "salt_len": 0,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 253,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 253,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_2048_sha_384_mgf1_sha_384_0.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 2048,
      "sha": "SHA-384",
      "mgf": "MGF1",
      "mgf_sha": "SHA-384",
      "salt_len": 0,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 158,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 158,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_2048_sha_512_mgf1_sha_512_0.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 2048,
      "sha": "SHA-512",
      "mgf": "MGF1",
      "mgf_sha": "SHA-512",
      "salt_len": 0,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 435,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 435,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_3072_sha_224_mgf1_sha_224_0.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 3072,
      "sha": "SHA-224",
      "mgf": "MGF1",
      "mgf_sha": "SHA-224",
      "salt_len": 0,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 100,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_3072_sha_256_mgf1_sha_256_0.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 3072,
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256",
      "salt_len": 0,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 251,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 251,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_3072_sha_384_mgf1_sha_384_0.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 3072,
      "sha": "SHA-384",
      "mgf": "MGF1",
      "mgf_sha": "SHA-384",
      "salt_len": 0,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 156,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 156,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_3072_sha_512_mgf1_sha_512_0.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 3072,
      "sha": "SHA-512",
      "mgf": "MGF1",
      "mgf_sha": "SHA-512",
      "salt_len": 0,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 433,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 433,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_2048_sha_224_mgf1_sha_1_20.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 2048,
      "sha": "SHA-224",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1",
      "salt_len": 20,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 102,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_2048_sha_256_mgf1_sha_1_20.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 2048,
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1",
      "salt_len": 20,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 253,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_3072_sha_224_mgf1_sha_1_20.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 3072,
      "sha": "SHA-224",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1",
      "salt_len": 20,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 99,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_3072_sha_256_mgf1_sha_1_20.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 3072,
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1",
      "salt_len": 20,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 252,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_1536_sha_1_mgf1_sha_1_20.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 1536,
      "sha": "SHA-1",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1",
      "salt_len": 20,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 265,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 265,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_1536_sha_224_mgf1_sha_224_28.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 1536,
      "sha": "SHA-224",
      "mgf": "MGF1",
      "mgf_sha": "SHA-224",
      "salt_len": 28,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 99,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_1536_sha_256_mgf1_sha_256_32.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 1536,
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256",
      "salt_len": 32,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 252,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 252,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_1024_sha_1_mgf1_sha_1_20.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 1024,
      "sha": "SHA-1",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1",
      "salt_len": 20,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 265,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 265,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_1024_sha_224_mgf1_sha_224_28.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 1024,
      "sha": "SHA-224",
      "mgf": "MGF1",
      "mgf_sha": "SHA-224",
      "salt_len": 28,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 99,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_1024_sha_256_mgf1_sha_256_32.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 1024,
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256",
      "salt_len": 32,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 250,
        "skipped": 0,
        "failed": 0
      },
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 250,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_ssa_pss_2048_shake128.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 2048,
      "sha": "SHAKE128",
      "mgf": "SHAKE",
      "mgf_sha": "SHAKE128",
      "salt_len": 32,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {}
  },
  "rsa_ssa_pss_2048_shake256.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 2048,
      "sha": "SHAKE256",
      "mgf": "SHAKE",
      "mgf_sha": "SHAKE256",
      "salt_len": 64,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {}
  },
  "rsa_ssa_pss_3072_shake128.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 3072,
      "sha": "SHAKE128",
      "mgf": "SHAKE",
      "mgf_sha": "SHAKE128",
      "salt_len": 32,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {}
  },
  "rsa_ssa_pss_3072_shake256.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 3072,
      "sha": "SHAKE256",
      "mgf": "SHAKE",
      "mgf_sha": "SHAKE256",
      "salt_len": 64,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {}
  },
  "rsa_ssa_pss_4096_shake128.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 4096,
      "sha": "SHAKE128",
      "mgf": "SHAKE",
      "mgf_sha": "SHAKE128",
      "salt_len": 32,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {}
  },
  "rsa_ssa_pss_4096_shake256.json": {
    "type": "RsaPssVerify",
    "alg": {
      "algorithmType": "RsaSsaPss",
      "primitive": "RsaSsaPss",
      "size": 4096,
      "sha": "SHAKE256",
      "mgf": "SHAKE",
      "mgf_sha": "SHAKE256",
      "salt_len": 64,
      "encoding": "DER"
    },
    "folder": "rsa_signature",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_pkcs1_1024.json": {
    "type": "RsaEsPkcs1Decrypt",
    "alg": {
      "algorithmType": "RsaEsPkcs1",
      "size": 1024,
      "encoding": "RAW"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_pkcs1_2048.json": {
    "type": "RsaEsPkcs1Decrypt",
    "alg": {
      "algorithmType": "RsaEsPkcs1",
      "size": 2048,
      "encoding": "RAW"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_pkcs1_3072.json": {
    "type": "RsaEsPkcs1Decrypt",
    "alg": {
      "algorithmType": "RsaEsPkcs1",
      "size": 3072,
      "encoding": "RAW"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_pkcs1_4096.json": {
    "type": "RsaEsPkcs1Decrypt",
    "alg": {
      "algorithmType": "RsaEsPkcs1",
      "size": 4096,
      "encoding": "RAW"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_pkcs1_pkcs8_1024.json": {
    "type": "RsaEsPkcs1Decrypt",
    "alg": {
      "algorithmType": "RsaEsPkcs1",
      "size": 1024,
      "encoding": "PKCS8"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_pkcs1_pkcs8_2048.json": {
    "type": "RsaEsPkcs1Decrypt",
    "alg": {
      "algorithmType": "RsaEsPkcs1",
      "size": 2048,
      "encoding": "PKCS8"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_pkcs1_pkcs8_3072.json": {
    "type": "RsaEsPkcs1Decrypt",
    "alg": {
      "algorithmType": "RsaEsPkcs1",
      "size": 3072,
      "encoding": "PKCS8"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_pkcs1_pkcs8_4096.json": {
    "type": "RsaEsPkcs1Decrypt",
    "alg": {
      "algorithmType": "RsaEsPkcs1",
      "size": 4096,
      "encoding": "PKCS8"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_pkcs1_pem_1024.json": {
    "type": "RsaEsPkcs1Decrypt",
    "alg": {
      "algorithmType": "RsaEsPkcs1",
      "size": 1024,
      "encoding": "PEM"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:16",
        "testVersion": "0.55",
        "passed": 23,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_es_pkcs1_pem_2048.json": {
    "type": "RsaEsPkcs1Decrypt",
    "alg": {
      "algorithmType": "RsaEsPkcs1",
      "size": 2048,
      "encoding": "PEM"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:16",
        "testVersion": "0.55",
        "passed": 23,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_es_pkcs1_pem_3072.json": {
    "type": "RsaEsPkcs1Decrypt",
    "alg": {
      "algorithmType": "RsaEsPkcs1",
      "size": 3072,
      "encoding": "PEM"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:16",
        "testVersion": "0.55",
        "passed": 23,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_es_pkcs1_pem_4096.json": {
    "type": "RsaEsPkcs1Decrypt",
    "alg": {
      "algorithmType": "RsaEsPkcs1",
      "size": 4096,
      "encoding": "PEM"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:16",
        "testVersion": "0.55",
        "passed": 23,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_1024_sha_1_mgf1_sha_1.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 1024,
      "encoding": "RAW",
      "sha": "SHA-1",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_1024_sha_256_mgf1_sha_256.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 1024,
      "encoding": "RAW",
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_2048_sha_1_mgf1_sha_1.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "RAW",
      "sha": "SHA-1",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_2048_sha_256_mgf1_sha_256.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "RAW",
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_3072_sha_1_mgf1_sha_1.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 3072,
      "encoding": "RAW",
      "sha": "SHA-1",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_3072_sha_256_mgf1_sha_256.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 3072,
      "encoding": "RAW",
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_4096_sha_1_mgf1_sha_1.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 4096,
      "encoding": "RAW",
      "sha": "SHA-1",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_4096_sha_256_mgf1_sha_256.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 4096,
      "encoding": "RAW",
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_pkcs8_1024_sha_1_mgf1_sha_1.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 1024,
      "encoding": "PKCS8",
      "sha": "SHA-1",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 14,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pkcs8_1024_sha_256_mgf1_sha_256.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 1024,
      "encoding": "PKCS8",
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pkcs8_2048_sha_1_mgf1_sha_1.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PKCS8",
      "sha": "SHA-1",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 14,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 14,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pkcs8_2048_sha_256_mgf1_sha_256.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PKCS8",
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 14,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 14,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pkcs8_3072_sha_1_mgf1_sha_1.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 3072,
      "encoding": "PKCS8",
      "sha": "SHA-1",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 14,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pkcs8_3072_sha_256_mgf1_sha_256.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 3072,
      "encoding": "PKCS8",
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 14,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 14,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pkcs8_4096_sha_1_mgf1_sha_1.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 4096,
      "encoding": "PKCS8",
      "sha": "SHA-1",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 14,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pkcs8_4096_sha_256_mgf1_sha_256.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 4096,
      "encoding": "PKCS8",
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 14,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 14,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pem_1024_sha_1_mgf1_sha_1.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 1024,
      "encoding": "PEM",
      "sha": "SHA-1",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 39,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pem_1024_sha_256_mgf1_sha_256.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 1024,
      "encoding": "PEM",
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pem_2048_sha_1_mgf1_sha_1.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PEM",
      "sha": "SHA-1",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 39,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pem_2048_sha_256_mgf1_sha_256.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PEM",
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 39,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pem_3072_sha_1_mgf1_sha_1.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 3072,
      "encoding": "PEM",
      "sha": "SHA-1",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 39,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pem_3072_sha_256_mgf1_sha_256.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 3072,
      "encoding": "PEM",
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 39,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pem_4096_sha_1_mgf1_sha_1.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 4096,
      "encoding": "PEM",
      "sha": "SHA-1",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:15",
        "testVersion": "0.55",
        "passed": 39,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pem_4096_sha_256_mgf1_sha_256.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 4096,
      "encoding": "PEM",
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:16",
        "testVersion": "0.55",
        "passed": 39,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_2048_sha_1_mgf1_sha_256.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "RAW",
      "sha": "SHA-1",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_2048_sha_256_mgf1_sha_1.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "RAW",
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_2048_sha_224_mgf1_sha_224.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "RAW",
      "sha": "SHA-224",
      "mgf": "MGF1",
      "mgf_sha": "SHA-224"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_2048_sha_384_mgf1_sha_384.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "RAW",
      "sha": "SHA-384",
      "mgf": "MGF1",
      "mgf_sha": "SHA-384"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_2048_sha_512_mgf1_sha_512.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "RAW",
      "sha": "SHA-512",
      "mgf": "MGF1",
      "mgf_sha": "SHA-512"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_2048_sha3_224_mgf1_sha3_224.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "RAW",
      "sha": "SHA3-224",
      "mgf": "MGF1",
      "mgf_sha": "SHA3-224"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_2048_sha3_256_mgf1_sha3_256.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "RAW",
      "sha": "SHA3-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA3-256"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_2048_sha3_384_mgf1_sha3_384.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "RAW",
      "sha": "SHA3-384",
      "mgf": "MGF1",
      "mgf_sha": "SHA3-384"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_2048_sha3_512_mgf1_sha3_512.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "RAW",
      "sha": "SHA3-512",
      "mgf": "MGF1",
      "mgf_sha": "SHA3-512"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_pkcs8_2048_sha_1_mgf1_sha_256.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PKCS8",
      "sha": "SHA-1",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pkcs8_2048_sha_256_mgf1_sha_1.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PKCS8",
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_pkcs8_2048_sha_224_mgf1_sha_224.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PKCS8",
      "sha": "SHA-224",
      "mgf": "MGF1",
      "mgf_sha": "SHA-224"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 14,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pkcs8_2048_sha_384_mgf1_sha_384.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PKCS8",
      "sha": "SHA-384",
      "mgf": "MGF1",
      "mgf_sha": "SHA-384"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 14,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 14,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pkcs8_2048_sha_512_mgf1_sha_512.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PKCS8",
      "sha": "SHA-512",
      "mgf": "MGF1",
      "mgf_sha": "SHA-512"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "crypto.subtle": {
        "language": "javascript",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 0,
        "failed": 0
      },
      "rsa": {
        "language": "rust",
        "libVersion": "{ version = \"0.9.6\", features = [\"sha1\", \"sha2\"] }",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pkcs8_2048_sha3_224_mgf1_sha3_224.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PKCS8",
      "sha": "SHA3-224",
      "mgf": "MGF1",
      "mgf_sha": "SHA3-224"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_pkcs8_2048_sha3_256_mgf1_sha3_256.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PKCS8",
      "sha": "SHA3-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA3-256"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_pkcs8_2048_sha3_384_mgf1_sha3_384.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PKCS8",
      "sha": "SHA3-384",
      "mgf": "MGF1",
      "mgf_sha": "SHA3-384"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_pkcs8_2048_sha3_512_mgf1_sha3_512.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PKCS8",
      "sha": "SHA3-512",
      "mgf": "MGF1",
      "mgf_sha": "SHA3-512"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_pem_2048_sha_1_mgf1_sha_256.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PEM",
      "sha": "SHA-1",
      "mgf": "MGF1",
      "mgf_sha": "SHA-256"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:16",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pem_2048_sha_256_mgf1_sha_1.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PEM",
      "sha": "SHA-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA-1"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:16",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pem_2048_sha_224_mgf1_sha_224.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PEM",
      "sha": "SHA-224",
      "mgf": "MGF1",
      "mgf_sha": "SHA-224"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:16",
        "testVersion": "0.55",
        "passed": 39,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pem_2048_sha_384_mgf1_sha_384.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PEM",
      "sha": "SHA-384",
      "mgf": "MGF1",
      "mgf_sha": "SHA-384"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:16",
        "testVersion": "0.55",
        "passed": 39,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pem_2048_sha_512_mgf1_sha_512.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PEM",
      "sha": "SHA-512",
      "mgf": "MGF1",
      "mgf_sha": "SHA-512"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:16",
        "testVersion": "0.55",
        "passed": 25,
        "skipped": 0,
        "failed": 0
      }
    }
  },
  "rsa_es_oaep_pem_2048_sha3_224_mgf1_sha3_224.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PEM",
      "sha": "SHA3-224",
      "mgf": "MGF1",
      "mgf_sha": "SHA3-224"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_pem_2048_sha3_256_mgf1_sha3_256.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PEM",
      "sha": "SHA3-256",
      "mgf": "MGF1",
      "mgf_sha": "SHA3-256"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_pem_2048_sha3_384_mgf1_sha3_384.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PEM",
      "sha": "SHA3-384",
      "mgf": "MGF1",
      "mgf_sha": "SHA3-384"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "rsa_es_oaep_pem_2048_sha3_512_mgf1_sha3_512.json": {
    "type": "RsaEsOaepDecrypt",
    "alg": {
      "algorithmType": "RsaEsOaep",
      "size": 2048,
      "encoding": "PEM",
      "sha": "SHA3-512",
      "mgf": "MGF1",
      "mgf_sha": "SHA3-512"
    },
    "folder": "rsa_encryption",
    "references": [],
    "testStatus": {}
  },
  "x25519.json": {
    "type": "Xdh",
    "alg": {
      "algorithmType": "Xdh",
      "primitive": "X25519"
    },
    "folder": "xdh",
    "references": ["RFC 7748"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:16",
        "testVersion": "0.55",
        "passed": 272,
        "skipped": 0,
        "failed": 0
      },
      "x25519_dalek": {
        "language": "rust",
        "libVersion": "",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 262,
        "skipped": 10,
        "failed": 0
      }
    }
  },
  "x448.json": {
    "type": "Xdh",
    "alg": {
      "algorithmType": "Xdh",
      "primitive": "X448"
    },
    "folder": "xdh",
    "references": ["RFC 7748"],
    "testStatus": {
      "pyca": {
        "language": "python",
        "libVersion": "43.0.3",
        "date": "2024-12-08 23:16",
        "testVersion": "0.55",
        "passed": 211,
        "skipped": 0,
        "failed": 0
      },
      "x448": {
        "language": "rust",
        "libVersion": "\"0.6.0\"",
        "date": "2024-12-08 23:27",
        "testVersion": "0.55",
        "passed": 205,
        "skipped": 6,
        "failed": 0
      }
    }
  }
}